!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).AsgardeoAuth={})}(this,(function(e){"use strict";function t(e,t,l,i){return new(l||(l=Promise))((function(n,o){function d(e){try{a(i.next(e))}catch(e){o(e)}}function c(e){try{a(i.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof l?t:new l((function(e){e(t)}))).then(d,c)}a((i=i.apply(e,t||[])).next())}))}function l(e,t,l,i){return new(l||(l=Promise))((function(n,o){function d(e){try{a(i.next(e))}catch(e){o(e)}}function c(e){try{a(i.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof l?t:new l((function(e){e(t)}))).then(d,c)}a((i=i.apply(e,t||[])).next())}))}e.ResponseMode=void 0,function(e){e.formPost="form_post",e.query="query"}(e.ResponseMode||(e.ResponseMode={}));e.Stores=void 0,function(e){e.ConfigData="config_data",e.OIDCProviderMetaData="oidc_provider_meta_data",e.SessionData="session_data",e.TemporaryData="temporary_data"}(e.Stores||(e.Stores={}));const i="refresh_token_timer",n=["RS256","RS512","RS384","PS256"],o="code",d="session_state",c="sign_out_url",a="sign_out_success",s="state";var Z;!function(e){e.Include="include",e.SameOrigin="same-origin",e.Omit="omit"}(Z||(Z={}));class r{constructor(e,t,l){this.message=l,this.name=t,this.code=e,Object.setPrototypeOf(this,new.target.prototype)}}class u{constructor(){}static filterClaimsFromIDTokenPayload(e){const t=Object.assign({},e);null==t||delete t.iss,null==t||delete t.aud,null==t||delete t.exp,null==t||delete t.iat,null==t||delete t.acr,null==t||delete t.amr,null==t||delete t.azp,null==t||delete t.auth_time,null==t||delete t.nonce,null==t||delete t.c_hash,null==t||delete t.at_hash,null==t||delete t.nbf,null==t||delete t.isk,null==t||delete t.sid;const l={};return Object.entries(t).forEach((([e,t])=>{const i=e.split("_").map(((e,t)=>0===t?e:[e[0].toUpperCase(),...e.slice(1)].join(""))).join("");l[i]=t})),l}static getTokenRequestHeaders(){return{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded"}}static generateStateParamForRequestCorrelation(e,t){const l=parseInt(e.split("#")[1]);return t?`${t}_request_${l}`:`request_${l}`}static extractPKCEKeyFromStateParam(e){return`pkce_code_verifier#${parseInt(e.split("request_")[1])}`}}u.getTenantDomainFromIdTokenPayload=(e,t="@")=>{const l=e.sub.split(t);return l.length>2?l[l.length-1]:""};class b{constructor(e,t){this._dataLayer=e,this._config=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()})),this._cryptoHelper=t}resolveEndpoints(e){return l(this,void 0,void 0,(function*(){const t={},l=yield this._config();return l.endpoints&&Object.keys(l.endpoints).forEach((e=>{const i=e.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));t[i]=(null==l?void 0:l.endpoints)?l.endpoints[e]:""})),Object.assign(Object.assign({},e),t)}))}resolveEndpointsExplicitly(){return l(this,void 0,void 0,(function*(){const e={},t=yield this._config();if(!t.endpoints||!["authorization_endpoint","end_session_endpoint","jwks_uri","check_session_iframe","revocation_endpoint","token_endpoint","issuer","userinfo_endpoint"].every((e=>!!t.endpoints&&Object.keys(t.endpoints).some((t=>t.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`))===e)))))throw new r("JS-AUTH_HELPER-REE-NF01","Required endpoints missing","Some or all of the required endpoints are missing in the object passed to the `endpoints` attribute of the`AuthConfig` object.");return t.endpoints&&Object.keys(t.endpoints).forEach((l=>{const i=l.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));e[i]=(null==t?void 0:t.endpoints)?t.endpoints[l]:""})),Object.assign({},e)}))}resolveEndpointsByBaseURL(){return l(this,void 0,void 0,(function*(){const e={},t=yield this._config(),l=t.baseUrl;if(!l)throw new r("JS-AUTH_HELPER_REBO-NF01","Base URL not defined.","Base URL is not defined in AuthClient config.");t.endpoints&&Object.keys(t.endpoints).forEach((l=>{const i=l.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));e[i]=(null==t?void 0:t.endpoints)?t.endpoints[l]:""}));const i={authorization_endpoint:`${l}/oauth2/authorize`,end_session_endpoint:`${l}/oidc/logout`,issuer:`${l}/oauth2/token`,jwks_uri:`${l}/oauth2/jwks`,check_session_iframe:`${l}/oidc/checksession`,revocation_endpoint:`${l}/oauth2/revoke`,token_endpoint:`${l}/oauth2/token`,userinfo_endpoint:`${l}/oauth2/userinfo`};return Object.assign(Object.assign({},i),e)}))}validateIdToken(e){var t;return l(this,void 0,void 0,(function*(){const l=(yield this._dataLayer.getOIDCProviderMetaData()).jwks_uri,i=yield this._config();if(!l||0===l.trim().length)throw new r("JS_AUTH_HELPER-VIT-NF01","JWKS endpoint not found.","No JWKS endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the JWKS endpoint passed to the SDK is empty.");let n;try{n=yield fetch(l,{credentials:i.sendCookiesInRequests?Z.Include:Z.SameOrigin})}catch(l){throw new r("JS-AUTH_HELPER-VIT-NE02","Request to jwks endpoint failed.",null!=l?l:"The request sent to get the jwks from the server failed.")}if(200!==n.status||!n.ok)throw new r("JS-AUTH_HELPER-VIT-HE03",`Invalid response status received for jwks request (${n.statusText}).`,yield n.json());const o=(yield this._oidcProviderMetaData()).issuer,{keys:d}=yield n.json(),c=yield this._cryptoHelper.getJWKForTheIdToken(e.split(".")[0],d);return this._cryptoHelper.isValidIdToken(e,c,(yield this._config()).clientID,null!=o?o:"",this._cryptoHelper.decodeIDToken(e).sub,(yield this._config()).clockTolerance,null===(t=(yield this._config()).validateIDTokenIssuer)||void 0===t||t)}))}getAuthenticatedUserInfo(e){var t,l,i,n;const o=this._cryptoHelper.decodeIDToken(e),d=u.getTenantDomainFromIdTokenPayload(o),c=null!==(t=null==o?void 0:o.username)&&void 0!==t?t:"",a=null!==(l=o.given_name)&&void 0!==l?l:"",s=null!==(i=o.family_name)&&void 0!==i?i:"",Z=a&&s?`${a} ${s}`:a||s||"",r=null!==(n=o.preferred_username)&&void 0!==n?n:Z;return Object.assign({displayName:r,tenantDomain:d,username:c},u.filterClaimsFromIDTokenPayload(o))}replaceCustomGrantTemplateTags(e,t){var i;return l(this,void 0,void 0,(function*(){let l="openid";const n=yield this._config(),o=yield this._dataLayer.getSessionData(t);return n.scope&&n.scope.length>0&&(n.scope.includes("openid")||n.scope.push("openid"),l=n.scope.join(" ")),e.replace("{{token}}",o.access_token).replace("{{username}}",this.getAuthenticatedUserInfo(o.id_token).username).replace("{{scope}}",l).replace("{{clientID}}",n.clientID).replace("{{clientSecret}}",null!==(i=n.clientSecret)&&void 0!==i?i:"")}))}clearUserSessionData(e){return l(this,void 0,void 0,(function*(){yield this._dataLayer.removeTemporaryData(e),yield this._dataLayer.removeSessionData(e)}))}handleTokenResponse(e,t){return l(this,void 0,void 0,(function*(){if(200!==e.status||!e.ok)throw new r("JS-AUTH_HELPER-HTR-NE01",`Invalid response status received for token request (${e.statusText}).`,yield e.json());const i=yield e.json();if(i.created_at=(new Date).getTime(),(yield this._config()).validateIDToken)return this.validateIdToken(i.id_token).then((()=>l(this,void 0,void 0,(function*(){yield this._dataLayer.setSessionData(i,t);const e={accessToken:i.access_token,createdAt:i.created_at,expiresIn:i.expires_in,idToken:i.id_token,refreshToken:i.refresh_token,scope:i.scope,tokenType:i.token_type};return Promise.resolve(e)}))));{const e={accessToken:i.access_token,createdAt:i.created_at,expiresIn:i.expires_in,idToken:i.id_token,refreshToken:i.refresh_token,scope:i.scope,tokenType:i.token_type};return yield this._dataLayer.setSessionData(i,t),Promise.resolve(e)}}))}generatePKCEKey(e){var t;return l(this,void 0,void 0,(function*(){const l=yield this._dataLayer.getTemporaryData(e),i=[];Object.keys(l).forEach((e=>{e.startsWith("pkce_code_verifier")&&i.push(e)}));const n=i.sort().pop();return`pkce_code_verifier#${parseInt(null!==(t=null==n?void 0:n.split("#")[1])&&void 0!==t?t:"-1")+1}`}))}}class h{constructor(e){this._cryptoUtils=e}getCodeVerifier(){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.generateRandomBytes(32))}getCodeChallenge(e){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.hashSha256(e))}getJWKForTheIdToken(e,t){const l=JSON.parse(this._cryptoUtils.base64URLDecode(e));for(const e of t)if(l.kid===e.kid)return e;throw new r("JS-CRYPTO_UTIL-GJFTIT-IV01","kid not found.","Failed to find the 'kid' specified in the id_token. 'kid' found in the header : "+l.kid+", Expected values: "+t.map((e=>e.kid)).join(", "))}isValidIdToken(e,t,l,i,o,d,c){return this._cryptoUtils.verifyJwt(e,t,n,l,i,o,d,c).then((e=>e?Promise.resolve(!0):Promise.reject(new r("JS-CRYPTO_HELPER-IVIT-IV01","Invalid ID token.","ID token validation returned false"))))}decodeIDToken(e){try{const t=this._cryptoUtils.base64URLDecode(e.split(".")[1]);return JSON.parse(t)}catch(e){throw new r("JS-CRYPTO_UTIL-DIT-IV01","Decoding ID token failed.",e)}}}class m{constructor(e,t){this._cryptoUtils=t,this._cryptoHelper=new h(t),this._authenticationHelper=new b(e,this._cryptoHelper),this._dataLayer=e,this._config=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>l(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()}))}getAuthorizationURL(e,t){var i,n,o;return l(this,void 0,void 0,(function*(){const l=yield this._dataLayer.getOIDCProviderMetaDataParameter("authorization_endpoint"),d=yield this._config();if(!l||0===l.trim().length)throw new r("JS-AUTH_CORE-GAU-NF01","No authorization endpoint found.","No authorization endpoint was found in the OIDC provider meta data from the well-known endpoint or the authorization endpoint passed to the SDK is empty.");const c=new URL(l),a=new Map;a.set("response_type","code"),a.set("client_id",d.clientID);let s="openid";d.scope&&d.scope.length>0&&(d.scope.includes("openid")||d.scope.push("openid"),s=d.scope.join(" ")),a.set("scope",s),a.set("redirect_uri",d.signInRedirectURL),d.responseMode&&a.set("response_mode",d.responseMode);const Z=yield this._authenticationHelper.generatePKCEKey(t);if(d.enablePKCE){const e=null===(i=this._cryptoHelper)||void 0===i?void 0:i.getCodeVerifier(),l=null===(n=this._cryptoHelper)||void 0===n?void 0:n.getCodeChallenge(e);yield this._dataLayer.setTemporaryDataParameter(Z,e,t),a.set("code_challenge_method","S256"),a.set("code_challenge",l)}d.prompt&&a.set("prompt",d.prompt);const b=e;if(b)for(const[e,t]of Object.entries(b))""!=e&&""!=t&&"state"!==e&&a.set(e,t.toString());a.set("state",u.generateStateParamForRequestCorrelation(Z,b?null===(o=b.state)||void 0===o?void 0:o.toString():""));for(const[e,t]of a.entries())c.searchParams.append(e,t);return c.toString()}))}requestAccessToken(e,t,i,n){return l(this,void 0,void 0,(function*(){const l=(yield this._oidcProviderMetaData()).token_endpoint,o=yield this._config();if(!l||0===l.trim().length)throw new r("JS-AUTH_CORE-RAT1-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");t&&(yield this._dataLayer.setSessionDataParameter("session_state",t,n));const d=new URLSearchParams;d.set("client_id",o.clientID),o.clientSecret&&o.clientSecret.trim().length>0&&d.set("client_secret",o.clientSecret);const c=e;let a;d.set("code",c),d.set("grant_type","authorization_code"),d.set("redirect_uri",o.signInRedirectURL),o.enablePKCE&&(d.set("code_verifier",`${yield this._dataLayer.getTemporaryDataParameter(u.extractPKCEKeyFromStateParam(i),n)}`),yield this._dataLayer.removeTemporaryDataParameter(u.extractPKCEKeyFromStateParam(i),n));try{a=yield fetch(l,{body:d,credentials:o.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(u.getTokenRequestHeaders()),method:"POST"})}catch(l){throw new r("JS-AUTH_CORE-RAT1-NE02","Requesting access token failed",null!=l?l:"The request to get the access token from the server failed.")}if(!a.ok)throw new r("JS-AUTH_CORE-RAT1-HE03",`Requesting access token failed with ${a.statusText}`,yield a.json());return yield this._authenticationHelper.handleTokenResponse(a,n)}))}refreshAccessToken(e){return l(this,void 0,void 0,(function*(){const t=(yield this._oidcProviderMetaData()).token_endpoint,l=yield this._config(),i=yield this._dataLayer.getSessionData(e);if(!i.refresh_token)throw new r("JS-AUTH_CORE-RAT2-NF01","No refresh token found.","There was no refresh token found. Asgardeo doesn't return a refresh token if the refresh token grant is not enabled.");if(!t||0===t.trim().length)throw new r("JS-AUTH_CORE-RAT2-NF02","No refresh token endpoint found.","No refresh token endpoint was in the OIDC provider meta data returned by the well-known endpoint or the refresh token endpoint passed to the SDK is empty.");const n=[];let o;n.push(`client_id=${l.clientID}`),n.push(`refresh_token=${i.refresh_token}`),n.push("grant_type=refresh_token"),l.clientSecret&&l.clientSecret.trim().length>0&&n.push(`client_secret=${l.clientSecret}`);try{o=yield fetch(t,{body:n.join("&"),credentials:l.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(u.getTokenRequestHeaders()),method:"POST"})}catch(t){throw new r("JS-AUTH_CORE-RAT2-NR03","Refresh access token request failed.",null!=t?t:"The request to refresh the access token failed.")}if(!o.ok)throw new r("JS-AUTH_CORE-RAT2-HE04",`Refreshing access token failed with ${o.statusText}`,yield o.json());return this._authenticationHelper.handleTokenResponse(o,e)}))}revokeAccessToken(e){return l(this,void 0,void 0,(function*(){const t=(yield this._oidcProviderMetaData()).revocation_endpoint,l=yield this._config();if(!t||0===t.trim().length)throw new r("JS-AUTH_CORE-RAT3-NF01","No revoke access token endpoint found.","No revoke access token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the revoke access token endpoint passed to the SDK is empty.");const i=[];let n;i.push(`client_id=${l.clientID}`),i.push(`token=${(yield this._dataLayer.getSessionData(e)).access_token}`),i.push("token_type_hint=access_token");try{n=yield fetch(t,{body:i.join("&"),credentials:l.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(u.getTokenRequestHeaders()),method:"POST"})}catch(t){throw new r("JS-AUTH_CORE-RAT3-NE02","The request to revoke access token failed.",null!=t?t:"The request sent to revoke the access token failed.")}if(200!==n.status||!n.ok)throw new r("JS-AUTH_CORE-RAT3-HE03",`Invalid response status received for revoke access token request (${n.statusText}).`,yield n.json());return this._authenticationHelper.clearUserSessionData(e),Promise.resolve(n)}))}requestCustomGrant(e,t){return l(this,void 0,void 0,(function*(){const i=yield this._oidcProviderMetaData(),n=yield this._config();let o;if(o=e.tokenEndpoint&&0!==e.tokenEndpoint.trim().length?e.tokenEndpoint:i.token_endpoint,!o||0===o.trim().length)throw new r("JS-AUTH_CORE-RCG-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");const d=yield Promise.all(Object.entries(e.data).map((([e,i])=>l(this,void 0,void 0,(function*(){const l=yield this._authenticationHelper.replaceCustomGrantTemplateTags(i,t);return`${e}=${l}`})))));let c=Object.assign({},u.getTokenRequestHeaders());e.attachToken&&(c=Object.assign(Object.assign({},c),{Authorization:`Bearer ${(yield this._dataLayer.getSessionData(t)).access_token}`}));const a={body:d.join("&"),credentials:n.sendCookiesInRequests?Z.Include:Z.SameOrigin,headers:new Headers(c),method:"POST"};let s;try{s=yield fetch(o,a)}catch(e){throw new r("JS-AUTH_CORE-RCG-NE02","The custom grant request failed.",null!=e?e:"The request sent to get the custom grant failed.")}if(200!==s.status||!s.ok)throw new r("JS-AUTH_CORE-RCG-HE03",`Invalid response status received for the custom grant request. (${s.statusText})`,yield s.json());return e.returnsSession?this._authenticationHelper.handleTokenResponse(s,t):Promise.resolve(yield s.json())}))}getBasicUserInfo(e){return l(this,void 0,void 0,(function*(){const t=yield this._dataLayer.getSessionData(e),l=this._authenticationHelper.getAuthenticatedUserInfo(null==t?void 0:t.id_token);let i={allowedScopes:t.scope,sessionState:t.session_state};return Object.keys(l).forEach((e=>{void 0!==l[e]&&""!==l[e]&&null!==l[e]||delete l[e]})),i=Object.assign(Object.assign({},i),l),i}))}getDecodedIDToken(e){return l(this,void 0,void 0,(function*(){const t=(yield this._dataLayer.getSessionData(e)).id_token;return this._cryptoHelper.decodeIDToken(t)}))}getCryptoHelper(){return l(this,void 0,void 0,(function*(){return this._cryptoHelper}))}getIDToken(e){return l(this,void 0,void 0,(function*(){return(yield this._dataLayer.getSessionData(e)).id_token}))}getOIDCProviderMetaData(e){return l(this,void 0,void 0,(function*(){const t=yield this._config();if(!e&&(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated")))return Promise.resolve();const l=t.wellKnownEndpoint;if(l){let e;try{if(e=yield fetch(l),200!==e.status||!e.ok)throw new Error}catch(t){throw new r("JS-AUTH_CORE-GOPMD-HE01","Invalid well-known response","The well known endpoint response has been failed with an error.")}return yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpoints(yield e.json())),yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}if(t.baseUrl){try{yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsByBaseURL())}catch(t){throw new r("JS-AUTH_CORE-GOPMD-IV02","Resolving endpoints failed.",null!=t?t:"Resolving endpoints by base url failed.")}return yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}return yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsExplicitly()),yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}))}getOIDCServiceEndpoints(){var e,t,i,n,o,d,c,a,s,Z;return l(this,void 0,void 0,(function*(){const l=yield this._oidcProviderMetaData();return{authorizationEndpoint:null!==(e=l.authorization_endpoint)&&void 0!==e?e:"",checkSessionIframe:null!==(t=l.check_session_iframe)&&void 0!==t?t:"",endSessionEndpoint:null!==(i=l.end_session_endpoint)&&void 0!==i?i:"",introspectionEndpoint:null!==(n=l.introspection_endpoint)&&void 0!==n?n:"",issuer:null!==(o=l.issuer)&&void 0!==o?o:"",jwksUri:null!==(d=l.jwks_uri)&&void 0!==d?d:"",registrationEndpoint:null!==(c=l.registration_endpoint)&&void 0!==c?c:"",revocationEndpoint:null!==(a=l.revocation_endpoint)&&void 0!==a?a:"",tokenEndpoint:null!==(s=l.token_endpoint)&&void 0!==s?s:"",userinfoEndpoint:null!==(Z=l.userinfo_endpoint)&&void 0!==Z?Z:""}}))}getSignOutURL(e){var t,i,n;return l(this,void 0,void 0,(function*(){const l=null===(t=yield this._oidcProviderMetaData())||void 0===t?void 0:t.end_session_endpoint,o=yield this._config();if(!l||0===l.trim().length)throw new r("JS-AUTH_CORE-GSOU-NF01","Sign-out endpoint not found.","No sign-out endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the sign-out endpoint passed to the SDK is empty.");const d=null!==(i=null==o?void 0:o.signOutRedirectURL)&&void 0!==i?i:null==o?void 0:o.signInRedirectURL;if(!d||0===d.trim().length)throw new r("JS-AUTH_CORE-GSOU-NF03","No sign-out redirect URL found.","The sign-out redirect URL cannot be found or the URL passed to the SDK is empty. No sign-in redirect URL has been found either. ");const c=new URLSearchParams;if(c.set("post_logout_redirect_uri",d),o.sendIdTokenInLogoutRequest){const t=null===(n=yield this._dataLayer.getSessionData(e))||void 0===n?void 0:n.id_token;if(!t||0===t.trim().length)throw new r("JS-AUTH_CORE-GSOU-NF02","ID token not found.","No ID token could be found. Either the session information is lost or you have not signed in.");c.set("id_token_hint",t)}else c.set("client_id",o.clientID);return c.set("state","sign_out_success"),`${l}?${c.toString()}`}))}clearUserSessionData(e){return l(this,void 0,void 0,(function*(){yield this._authenticationHelper.clearUserSessionData(e)}))}getAccessToken(e){var t;return l(this,void 0,void 0,(function*(){return null===(t=yield this._dataLayer.getSessionData(e))||void 0===t?void 0:t.access_token}))}getCreatedAt(e){var t;return l(this,void 0,void 0,(function*(){return null===(t=yield this._dataLayer.getSessionData(e))||void 0===t?void 0:t.created_at}))}getExpiresIn(e){var t;return l(this,void 0,void 0,(function*(){return null===(t=yield this._dataLayer.getSessionData(e))||void 0===t?void 0:t.expires_in}))}isAuthenticated(e){return l(this,void 0,void 0,(function*(){const t=Boolean(yield this.getAccessToken(e)),l=yield this.getCreatedAt(e),i=yield this.getExpiresIn(e);if(!i)return!1;const n=1e3*parseInt(i),o=(new Date).getTime();return t&&l+n>o}))}getPKCECode(e,t){return l(this,void 0,void 0,(function*(){return yield this._dataLayer.getTemporaryDataParameter(u.extractPKCEKeyFromStateParam(e),t)}))}setPKCECode(e,t,i){return l(this,void 0,void 0,(function*(){return yield this._dataLayer.setTemporaryDataParameter(u.extractPKCEKeyFromStateParam(t),e,i)}))}updateConfig(e){return l(this,void 0,void 0,(function*(){yield this._dataLayer.setConfigData(e),yield this.getOIDCProviderMetaData(!0)}))}}class I{constructor(e,t){this._id=e,this._store=t}setDataInBulk(e,t){var i;return l(this,void 0,void 0,(function*(){const l=null!==(i=yield this._store.getData(e))&&void 0!==i?i:null,n=l&&JSON.parse(l),o=Object.assign(Object.assign({},n),t),d=JSON.stringify(o);yield this._store.setData(e,d)}))}setValue(e,t,i){var n;return l(this,void 0,void 0,(function*(){const l=null!==(n=yield this._store.getData(e))&&void 0!==n?n:null,o=l&&JSON.parse(l),d=Object.assign(Object.assign({},o),{[t]:i}),c=JSON.stringify(d);yield this._store.setData(e,c)}))}removeValue(e,t){var i;return l(this,void 0,void 0,(function*(){const l=null!==(i=yield this._store.getData(e))&&void 0!==i?i:null,n=l&&JSON.parse(l),o=Object.assign({},n);delete o[t];const d=JSON.stringify(o);yield this._store.setData(e,d)}))}_resolveKey(e,t){return t?`${e}-${this._id}-${t}`:`${e}-${this._id}`}isLocalStorageAvailable(){try{const e="__ASGARDEO_AUTH_CORE_LOCAL_STORAGE_TEST__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return!1}}setConfigData(t){return l(this,void 0,void 0,(function*(){yield this.setDataInBulk(this._resolveKey(e.Stores.ConfigData),t)}))}setOIDCProviderMetaData(t){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e.Stores.OIDCProviderMetaData),t)}))}setTemporaryData(t,i){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e.Stores.TemporaryData,i),t)}))}setSessionData(t,i){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e.Stores.SessionData,i),t)}))}setCustomData(e,t,i){return l(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e,i),t)}))}getConfigData(){var t;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(t=yield this._store.getData(this._resolveKey(e.Stores.ConfigData)))&&void 0!==t?t:null)}))}getOIDCProviderMetaData(){var t;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(t=yield this._store.getData(this._resolveKey(e.Stores.OIDCProviderMetaData)))&&void 0!==t?t:null)}))}getTemporaryData(t){var i;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(i=yield this._store.getData(this._resolveKey(e.Stores.TemporaryData,t)))&&void 0!==i?i:null)}))}getSessionData(t){var i;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(i=yield this._store.getData(this._resolveKey(e.Stores.SessionData,t)))&&void 0!==i?i:null)}))}getCustomData(e,t){var i;return l(this,void 0,void 0,(function*(){return JSON.parse(null!==(i=yield this._store.getData(this._resolveKey(e,t)))&&void 0!==i?i:null)}))}setSessionStatus(e){this.isLocalStorageAvailable()&&localStorage.setItem("asgardeo-session-active",e)}getSessionStatus(){var e;return this.isLocalStorageAvailable()&&null!==(e=localStorage.getItem("asgardeo-session-active"))&&void 0!==e?e:""}removeSessionStatus(){this.isLocalStorageAvailable()&&localStorage.removeItem("asgardeo-session-active")}removeConfigData(){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.ConfigData))}))}removeOIDCProviderMetaData(){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.OIDCProviderMetaData))}))}removeTemporaryData(t){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.TemporaryData,t))}))}removeSessionData(t){return l(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(e.Stores.SessionData,t))}))}getConfigDataParameter(t){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.ConfigData));return l&&JSON.parse(l)[t]}))}getOIDCProviderMetaDataParameter(t){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.OIDCProviderMetaData));return l&&JSON.parse(l)[t]}))}getTemporaryDataParameter(t,i){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.TemporaryData,i));return l&&JSON.parse(l)[t]}))}getSessionDataParameter(t,i){return l(this,void 0,void 0,(function*(){const l=yield this._store.getData(this._resolveKey(e.Stores.SessionData,i));return l&&JSON.parse(l)[t]}))}setConfigDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.ConfigData),t,i)}))}setOIDCProviderMetaDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.OIDCProviderMetaData),t,i)}))}setTemporaryDataParameter(t,i,n){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.TemporaryData,n),t,i)}))}setSessionDataParameter(t,i,n){return l(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(e.Stores.SessionData,n),t,i)}))}removeConfigDataParameter(t){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.ConfigData),t)}))}removeOIDCProviderMetaDataParameter(t){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.OIDCProviderMetaData),t)}))}removeTemporaryDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.TemporaryData,i),t)}))}removeSessionDataParameter(t,i){return l(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(e.Stores.SessionData,i),t)}))}}const G={clockTolerance:300,enablePKCE:!0,responseMode:e.ResponseMode.query,scope:["openid"],sendCookiesInRequests:!0,validateIDToken:!0,validateIDTokenIssuer:!0};class p{
/**
         * This is the constructor method that returns an instance of the .
         *
         * @param store - The store object.
         *
         * @example
         * ```
         * const _store: Store = new DataStore();
         * const auth = new AsgardeoAuthClient<CustomClientConfig>(_store);
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#constructor}
         *
         * @preserve
         */
constructor(){}
/**
         *
         * This method initializes the SDK with the config data.
         *
         * @param config - The config object to initialize with.
         *
         * @example
         * const config = \{
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://localhost:9443"
         * \}
         *
         * await auth.initialize(config);
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#initialize}
         *
         * @preserve
         */initialize(e,t,i,n){var o,d,c;return l(this,void 0,void 0,(function*(){const l=e.clientID;p._instanceID?p._instanceID+=1:p._instanceID=0,n&&(p._instanceID=n),this._dataLayer=new I(l?`instance_${p._instanceID}-${l}`:`instance_${p._instanceID}`,t),this._authenticationCore=new m(this._dataLayer,i),p._authenticationCore=new m(this._dataLayer,i),yield this._dataLayer.setConfigData(Object.assign(Object.assign(Object.assign({},G),e),{scope:[...null!==(o=G.scope)&&void 0!==o?o:[],...null!==(c=null===(d=e.scope)||void 0===d?void 0:d.filter((e=>{var t;return!(null===(t=null==G?void 0:G.scope)||void 0===t?void 0:t.includes(e))})))&&void 0!==c?c:[]]}))}))}
/**
         * This method returns the `DataLayer` object that allows you to access authentication data.
         *
         * @returns - The `DataLayer` object.
         *
         * @example
         * ```
         * const data = auth.getDataLayer();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getDataLayer}
         *
         * @preserve
         */getDataLayer(){return this._dataLayer}
/**
         * This method returns the `instanceID` variable of the given instance.
         *
         * @returns - The `instanceID` number.
         *
         * @example
         * ```
         * const instanceId = auth.getInstanceID();
         * ```
         *
         * @preserve
         */getInstanceID(){return p._instanceID}
/**
         * This is an async method that returns a Promise that resolves with the authorization URL.
         *
         * @param config - (Optional) A config object to force initialization and pass
         * custom path parameters such as the fidp parameter.
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A promise that resolves with the authorization URL.
         *
         * @example
         * ```
         * auth.getAuthorizationURL().then((url)=>{
         *  // console.log(url);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getAuthorizationURL}
         *
         * @preserve
         */getAuthorizationURL(e,t){return l(this,void 0,void 0,(function*(){const l=Object.assign({},e);return null==l||delete l.forceInit,(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.getAuthorizationURL(l,t):this._authenticationCore.getOIDCProviderMetaData(null==e?void 0:e.forceInit).then((()=>this._authenticationCore.getAuthorizationURL(l,t)))}))}
/**
         * This is an async method that sends a request to obtain the access token and returns a Promise
         * that resolves with the token and other relevant data.
         *
         * @param authorizationCode - The authorization code.
         * @param sessionState - The session state.
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with the token response.
         *
         * @example
         * ```
         * auth.requestAccessToken(authCode, sessionState).then((token)=>{
         *  // console.log(token);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#requestAccessToken}
         *
         *
         * @preserve
         */requestAccessToken(e,t,i,n){return l(this,void 0,void 0,(function*(){return(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.requestAccessToken(e,t,i,n):this._authenticationCore.getOIDCProviderMetaData(!1).then((()=>this._authenticationCore.requestAccessToken(e,t,i,n)))}))}
/**
         * This method returns the sign-out URL.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * **This doesn't clear the authentication data.**
         *
         * @returns - A Promise that resolves with the sign-out URL.
         *
         * @example
         * ```
         * const signOutUrl = await auth.getSignOutURL();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getSignOutURL}
         *
         * @preserve
         */getSignOutURL(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getSignOutURL(e)}))}
/**
         * This method returns OIDC service endpoints that are fetched from the `.well-known` endpoint.
         *
         * @returns - A Promise that resolves with an object containing the OIDC service endpoints.
         *
         * @example
         * ```
         * const endpoints = await auth.getOIDCServiceEndpoints();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getOIDCServiceEndpoints}
         *
         * @preserve
         */getOIDCServiceEndpoints(){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getOIDCServiceEndpoints()}))}
/**
         * This method decodes the payload of the ID token and returns it.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with the decoded ID token payload.
         *
         * @example
         * ```
         * const decodedIdToken = await auth.getDecodedIDToken();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getDecodedIDToken}
         *
         * @preserve
         */getDecodedIDToken(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getDecodedIDToken(e)}))}
/**
         * This method returns the ID token.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with the ID token.
         *
         * @example
         * ```
         * const idToken = await auth.getIDToken();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getIDToken}
         *
         * @preserve
         */getIDToken(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getIDToken(e)}))}
/**
         * This method returns the basic user information obtained from the ID token.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with an object containing the basic user information.
         *
         * @example
         * ```
         * const userInfo = await auth.getBasicUserInfo();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getBasicUserInfo}
         *
         * @preserve
         */getBasicUserInfo(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getBasicUserInfo(e)}))}
/**
         * This method returns the crypto helper object.
         *
         * @returns - A Promise that resolves with a CryptoHelper object.
         *
         * @example
         * ```
         * const cryptoHelper = await auth.CryptoHelper();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getCryptoHelper}
         *
         * @preserve
         */getCryptoHelper(){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getCryptoHelper()}))}
/**
         * This method revokes the access token.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * **This method also clears the authentication data.**
         *
         * @returns - A Promise that returns the response of the revoke-access-token request.
         *
         * @example
         * ```
         * auth.revokeAccessToken().then((response)=>{
         *  // console.log(response);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#revokeAccessToken}
         *
         * @preserve
         */revokeAccessToken(e){return this._authenticationCore.revokeAccessToken(e)}
/**
         * This method refreshes the access token and returns a Promise that resolves with the new access
         * token and other relevant data.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with the token response.
         *
         * @example
         * ```
         * auth.refreshAccessToken().then((response)=>{
         *  // console.log(response);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#refreshAccessToken}
         *
         * @preserve
         */refreshAccessToken(e){return this._authenticationCore.refreshAccessToken(e)}
/**
         * This method returns the access token.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with the access token.
         *
         * @example
         * ```
         * const accessToken = await auth.getAccessToken();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getAccessToken}
         *
         * @preserve
         */getAccessToken(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getAccessToken(e)}))}
/**
         * This method sends a custom-grant request and returns a Promise that resolves with the response
         * depending on the config passed.
         *
         * @param config - A config object containing the custom grant configurations.
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with the response depending
         * on your configurations.
         *
         * @example
         * ```
         * const config = {
         *   attachToken: false,
         *   data: {
         *       client_id: "{{clientID}}",
         *       grant_type: "account_switch",
         *       scope: "{{scope}}",
         *       token: "{{token}}",
         *   },
         *   id: "account-switch",
         *   returnResponse: true,
         *   returnsSession: true,
         *   signInRequired: true
         * }
         *
         * auth.requestCustomGrant(config).then((response)=>{
         *  // console.log(response);
         * }).catch((error)=>{
         *  // console.error(error);
         * });
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#requestCustomGrant}
         *
         * @preserve
         */requestCustomGrant(e,t){return this._authenticationCore.requestCustomGrant(e,t)}
/**
         * This method returns if the user is authenticated or not.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @returns - A Promise that resolves with `true` if the user is authenticated, `false` otherwise.
         *
         * @example
         * ```
         * await auth.isAuthenticated();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#isAuthenticated}
         *
         * @preserve
         */isAuthenticated(e){return l(this,void 0,void 0,(function*(){return this._authenticationCore.isAuthenticated(e)}))}
/**
         * This method returns the PKCE code generated during the generation of the authentication URL.
         *
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         * @param state - The state parameter that was passed in the authentication URL.
         *
         * @returns - A Promise that resolves with the PKCE code.
         *
         * @example
         * ```
         * const pkce = await getPKCECode();
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getPKCECode}
         *
         * @preserve
         */getPKCECode(e,t){return l(this,void 0,void 0,(function*(){return this._authenticationCore.getPKCECode(e,t)}))}
/**
         * This method sets the PKCE code to the data store.
         *
         * @param pkce - The PKCE code.
         * @param state - The state parameter that was passed in the authentication URL.
         * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
         * scenarios where each user should be uniquely identified.
         *
         * @example
         * ```
         * await auth.setPKCECode("pkce_code")
         * ```
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#setPKCECode}
         *
         * @preserve
         */setPKCECode(e,t,i){return l(this,void 0,void 0,(function*(){yield this._authenticationCore.setPKCECode(e,t,i)}))}
/**
         * This method returns if the sign-out is successful or not.
         *
         * @param signOutRedirectUrl - The URL to which the user has been redirected to after signing-out.
         *
         * **The server appends path parameters to the `signOutRedirectURL` and these path parameters
         *  are required for this method to function.**
         *
         * @returns - `true` if successful, `false` otherwise.
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#isSignOutSuccessful}
         *
         * @preserve
         */static isSignOutSuccessful(e){const t=new URL(e),l=t.searchParams.get("state"),i=Boolean(t.searchParams.get("error"));return!!l&&"sign_out_success"===l&&!i}
/**
         * This method returns if the sign-out has failed or not.
         *
         * @param signOutRedirectUrl - The URL to which the user has been redirected to after signing-out.
         *
         * **The server appends path parameters to the `signOutRedirectURL` and these path parameters
         *  are required for this method to function.**
         *
         * @returns - `true` if successful, `false` otherwise.
         *
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#didSignOutFail}
         *
         * @preserve
         */static didSignOutFail(e){const t=new URL(e),l=t.searchParams.get("state"),i=Boolean(t.searchParams.get("error"));return!!l&&"sign_out_success"===l&&i}
/**
         * This method updates the configuration that was passed into the constructor when instantiating this class.
         *
         * @param config - A config object to update the SDK configurations with.
         *
         * @example
         * ```
         * const config = {
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://localhost:9443"
         * }
         *
         * await auth.updateConfig(config);
         * ```
         * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#updateConfig}
         *
         * @preserve
         */updateConfig(e){return l(this,void 0,void 0,(function*(){yield this._authenticationCore.updateConfig(e)}))}static clearUserSessionData(e){return l(this,void 0,void 0,(function*(){yield this._authenticationCore.clearUserSessionData(e)}))}}function g(e,t,l){var i=void 0===t?null:t,n=function(e,t){var l=atob(e);if(t){for(var i=new Uint8Array(l.length),n=0,o=l.length;n<o;++n)i[n]=l.charCodeAt(n);return String.fromCharCode.apply(null,new Uint16Array(i.buffer))}return l}(e,void 0!==l&&l),o=n.indexOf("\n",10)+1,d=n.substring(o)+(i?"//# sourceMappingURL="+i:""),c=new Blob([d],{type:"application/javascript"});return URL.createObjectURL(c)}var X,y,V,W,C=(X="",y=null,V=!1,function(e){return W=W||g(X,y,V),new Worker(W,e)});const R="init",S="sign-out",Y="http-request",v="http-request-all",K="request-custom-grant",N="revoke-access-token",J="request-start",H="request-success",k="request-finish",L="get-oidc-service-endpoints",f="get-basic-user-info",U="get-decoded-id-token",T="get-crypto-helper",B="enable_http_handler",F="disable_http_handler",A="get_auth_url",z="request_get_token",x="is_authenticated",w="get_sign_out_url",P="refresh_access-token",Q="refresh-access-token-error",M="set_session_state",j="start_auto_refresh_token",E="update_config",D="get_id_token",O="check_session_signed_in",_="check_session_signed_out",q="get_config_data",$="set_session_state_from_iframe";var ee,te;e.Storage=void 0,(ee=e.Storage||(e.Storage={})).LocalStorage="localStorage",ee.SessionStorage="sessionStorage",ee.WebWorker="webWorker",ee.BrowserMemory="browserMemory",e.Hooks=void 0,(te=e.Hooks||(e.Hooks={})).SignIn="sign-in",te.SignOut="sign-out",te.Initialize="initialize",te.HttpRequestStart="http-request-start",te.HttpRequestFinish="http-request-finish",te.HttpRequestError="http-request-error",te.HttpRequestSuccess="http-request-success",te.RevokeAccessToken="revoke-access-token",te.CustomGrant="custom-grant",te.SignOutFailed="sign-out-failed";const le="rpIFrame",ie="promptNoneIFrame",ne="Y2hlY2tTZXNzaW9u",oe="sign-in-silently",de="initialized-silent-sign-in",ce="promptNoneRequestSent",ae="error",se="error_description",Ze="custom_grant_config",re="state",ue="Access token is invalid";class be{constructor(){}static generateSuccessMessage(e){return{blob:(null==e?void 0:e.data)instanceof Blob?null==e?void 0:e.data:null,data:JSON.stringify(null!=e?e:""),success:!0}}static generateFailureMessage(e){return(null==e?void 0:e.toJSON)&&delete e.toJSON,{error:JSON.stringify(null!=e?e:""),success:!1}}}class he{constructor(){}static removeAuthorizationCode(){const e=location.href;history.pushState({},document.title,e.replace(/\?code=.*$/,""))}static getPKCE(e){var t;return null!==(t=sessionStorage.getItem(e))&&void 0!==t?t:""}static setPKCE(e,t){sessionStorage.setItem(e,t)}static setSignOutURL(e,t,l){sessionStorage.setItem(`${c}-instance_${l}-${t}`,e)}static getSignOutURL(e,t){var l;return null!==(l=sessionStorage.getItem(`${c}-instance_${t}-${e}`))&&void 0!==l?l:""}static removePKCE(e){sessionStorage.removeItem(e)}static canContinueSignIn(e,t){return!(e&&!he.hasErrorInURL()&&!he.hasAuthSearchParamsInURL()&&!t)}static isInitializedSilentSignIn(){return he.isSilentStatePresentInURL()}static wasSignInCalled(){return!(!he.hasErrorInURL()&&!he.hasAuthSearchParamsInURL()||this.isSilentStatePresentInURL())}static wasSilentSignInCalled(){const e=sessionStorage.getItem(de),t=e?JSON.parse(e):null;return Boolean(t)}static isSignOutSuccessful(){return t(this,void 0,void 0,(function*(){if(p.isSignOutSuccessful(window.location.href)){const e=window.location.href.split("?")[0];return history.pushState({},document.title,e),yield p.clearUserSessionData(),!0}return!1}))}static didSignOutFail(){if(p.didSignOutFail(window.location.href)){const e=new URL(window.location.href),t=e.searchParams.get(ae),l=e.searchParams.get(se),i=window.location.href.split("?")[0];return history.pushState({},document.title,i),{description:null!=l?l:"",error:null!=t?t:""}}return!1}static isSilentStatePresentInURL(){var e;const t=new URL(window.location.href).searchParams.get("state");return null!==(e=null==t?void 0:t.includes(oe))&&void 0!==e&&e}static hasAuthSearchParamsInURL(e=window.location.search){return/[?&]code=[^&]+/.test(e)}static hasErrorInURL(e=window.location.href){const t=new URL(e);return!!t.searchParams.get(ae)&&t.searchParams.get(re)!==a}static canSendPromptNoneRequest(){const e=sessionStorage.getItem(ce);return!(e?JSON.parse(e):null)}static setPromptNoneRequestSent(e){sessionStorage.setItem(ce,JSON.stringify(e))}static waitTillPageRedirect(e){return t(this,void 0,void 0,(function*(){const t=null!=e?e:3e3;yield new Promise((e=>setTimeout(e,1e3*t)))}))}}class me{constructor(e,t){this._authenticationClient=e,this._dataLayer=this._authenticationClient.getDataLayer(),this._spaHelper=t,this._instanceID=this._authenticationClient.getInstanceID()}enableHttpHandler(e){(null==e?void 0:e.enableHandler)&&e.enableHandler()}disableHttpHandler(e){(null==e?void 0:e.disableHandler)&&e.disableHandler()}initializeSessionManger(e,t,l,i,n){var o,d,c;n.initialize(e.clientID,null!==(o=t.checkSessionIframe)&&void 0!==o?o:"",l,null!==(d=e.checkSessionInterval)&&void 0!==d?d:3,null!==(c=e.sessionRefreshInterval)&&void 0!==c?c:300,e.signInRedirectURL,i)}requestCustomGrant(e,l){var i,n,o;return t(this,void 0,void 0,(function*(){let d=!0,c=!1;if(null==e?void 0:e.tokenEndpoint){d=!1;for(const t of[...null!==(n=null===(i=yield this._dataLayer.getConfigData())||void 0===i?void 0:i.resourceServerURLs)&&void 0!==n?n:[],e.baseUrl])if(t&&(null===(o=e.tokenEndpoint)||void 0===o?void 0:o.startsWith(t))){c=!0;break}}return e.shouldReplayAfterRefresh&&this._dataLayer.setTemporaryDataParameter(Ze,JSON.stringify(e)),d||c?this._authenticationClient.requestCustomGrant(e).then((i=>t(this,void 0,void 0,(function*(){return l&&"function"==typeof l&&l(e),e.returnsSession?(this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()):i})))).catch((e=>Promise.reject(e))):Promise.reject(new r("SPA-MAIN_THREAD_CLIENT-RCG-IV01","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified token endpoint in this request cannot be found among the `resourceServerURLs`"))}))}getCustomGrantConfigData(){return t(this,void 0,void 0,(function*(){const e=yield this._dataLayer.getTemporaryDataParameter(Ze);return e?JSON.parse(e):null}))}refreshAccessToken(e){return t(this,void 0,void 0,(function*(){try{yield this._authenticationClient.refreshAccessToken();const t=yield this.getCustomGrantConfigData();return t&&(yield this.requestCustomGrant(t,e)),this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()}catch(e){const t={type:Q};return window.postMessage(t),Promise.reject(e)}}))}httpRequest(e,l,i,n,o,d){var c,a;return t(this,void 0,void 0,(function*(){let s=!1;const Z=yield this._dataLayer.getConfigData();for(const e of[...null!==(c=yield null==Z?void 0:Z.resourceServerURLs)&&void 0!==c?c:[],Z.baseUrl])if(e&&(null===(a=null==l?void 0:l.url)||void 0===a?void 0:a.startsWith(e))){s=!0;break}return s?e.request(l).then((e=>Promise.resolve(e))).catch((c=>t(this,void 0,void 0,(function*(){var t,a,s;if(401===(null===(t=null==c?void 0:c.response)||void 0===t?void 0:t.status)||!(null==c?void 0:c.response)){let t;try{t=yield this.refreshAccessToken(d)}catch(e){throw i&&("function"==typeof n&&(yield n(Object.assign(Object.assign({},c),{code:ue}))),"function"==typeof o&&o()),new r("SPA-AUTH_HELPER-HR-SE01",null!==(a=null==e?void 0:e.name)&&void 0!==a?a:"Refresh token request failed.",null!==(s=null==e?void 0:e.message)&&void 0!==s?s:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(t)try{const t=yield e.request(l);return Promise.resolve(t)}catch(e){return i&&("function"==typeof n&&(yield n(e)),"function"==typeof o&&o()),Promise.reject(e)}}return i&&("function"==typeof n&&(yield n(c)),"function"==typeof o&&o()),Promise.reject(c)})))):Promise.reject(new r("SPA-AUTH_HELPER-HR-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`"))}))}httpRequestAll(e,l,i,n,o){var d,c,a;return t(this,void 0,void 0,(function*(){let s=!0;const Z=yield this._dataLayer.getConfigData();for(const t of e){let e=!1;for(const l of[...null!==(c=null===(d=yield Z)||void 0===d?void 0:d.resourceServerURLs)&&void 0!==c?c:[],Z.baseUrl])if(l&&(null===(a=t.url)||void 0===a?void 0:a.startsWith(l))){e=!0;break}if(!e){s=!1;break}}const u=[];if(s)return e.forEach((e=>{u.push(l.request(e))})),(null==l?void 0:l.all)&&l.all(u).then((e=>Promise.resolve(e))).catch((e=>t(this,void 0,void 0,(function*(){var d,c,a;if(401===(null===(d=null==e?void 0:e.response)||void 0===d?void 0:d.status)||!(null==e?void 0:e.response)){let d;try{d=yield this._authenticationClient.refreshAccessToken()}catch(t){throw i&&("function"==typeof n&&(yield n(Object.assign(Object.assign({},e),{code:ue}))),"function"==typeof o&&o()),new r("SPA-AUTH_HELPER-HRA-SE01",null!==(c=null==t?void 0:t.name)&&void 0!==c?c:"Refresh token request failed.",null!==(a=null==t?void 0:t.message)&&void 0!==a?a:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(d)return l.all&&l.all(u).then((e=>Promise.resolve(e))).catch((e=>t(this,void 0,void 0,(function*(){return i&&("function"==typeof n&&(yield n(e)),"function"==typeof o&&o()),Promise.reject(e)}))))}return i&&("function"==typeof n&&(yield n(e)),"function"==typeof o&&o()),Promise.reject(e)}))));throw new r("SPA-AUTH_HELPER-HRA-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`")}))}requestAccessToken(l,i,n,o,d){return t(this,void 0,void 0,(function*(){const c=yield this._dataLayer.getConfigData();if(c.storage===e.Storage.BrowserMemory&&c.enablePKCE&&i){const e=he.getPKCE(u.extractPKCEKeyFromStateParam(i));yield this._authenticationClient.setPKCECode(u.extractPKCEKeyFromStateParam(i),e)}else c.storage===e.Storage.WebWorker&&o&&(yield this._authenticationClient.setPKCECode(o,null!=d?d:""));return l?this._authenticationClient.requestAccessToken(l,null!=i?i:"",null!=d?d:"").then((()=>t(this,void 0,void 0,(function*(){return c.storage!==e.Storage.WebWorker?(he.setSignOutURL(yield this._authenticationClient.getSignOutURL(),c.clientID,this._instanceID),this._spaHelper&&(this._spaHelper.clearRefreshTokenTimeout(),this._spaHelper.refreshAccessTokenAutomatically(this)),n&&"function"==typeof n&&c.enableOIDCSessionManagement&&n()):this._spaHelper&&this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()})))).catch((e=>Promise.reject(e))):Promise.reject(new r("SPA-AUTH_HELPER-RAT1-NF01","No authorization code.","No authorization code was found."))}))}trySignInSilently(e,l,i){var n;return t(this,void 0,void 0,(function*(){if(he.isInitializedSilentSignIn())return yield i.receivePromptNoneResponse(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});const o=document.getElementById(le),d=null===(n=null==o?void 0:o.contentDocument)||void 0===n?void 0:n.getElementById(ie);try{const t=yield e();d.src=t}catch(e){return Promise.reject(e)}return new Promise(((e,i)=>{const n=setTimeout((()=>{e(!1)}),1e4),o=d=>t(this,void 0,void 0,(function*(){var t,c,a,s;const Z=d.data;(null==Z?void 0:Z.type)==_&&(window.removeEventListener("message",o),clearTimeout(n),e(!1)),(null==Z?void 0:Z.type)==O&&(null===(t=null==Z?void 0:Z.data)||void 0===t?void 0:t.code)&&l(null===(c=null==Z?void 0:Z.data)||void 0===c?void 0:c.code,null===(a=null==Z?void 0:Z.data)||void 0===a?void 0:a.sessionState,null===(s=null==Z?void 0:Z.data)||void 0===s?void 0:s.state).then((t=>{window.removeEventListener("message",o),e(t)})).catch((e=>{window.removeEventListener("message",o),i(e)})).finally((()=>{clearTimeout(n)}))}));window.addEventListener("message",o)}))}))}handleSignIn(l,i,n){return t(this,void 0,void 0,(function*(){const t=yield this._dataLayer.getConfigData();if(yield l())return Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});if(t.storage!==e.Storage.WebWorker&&(yield this._authenticationClient.isAuthenticated()))return this._spaHelper.clearRefreshTokenTimeout(),this._spaHelper.refreshAccessTokenAutomatically(this),t.enableOIDCSessionManagement&&i(),Promise.resolve(yield this._authenticationClient.getBasicUserInfo());const o=new URL(window.location.href).searchParams.get(ae),d=new URL(window.location.href).searchParams.get(se);if(o){const e=new URL(window.location.href);throw e.searchParams.delete(ae),e.searchParams.delete(se),history.pushState(null,document.title,e.toString()),new r("SPA-AUTH_HELPER-SI-SE01",o,null!=d?d:"")}if(t.storage===e.Storage.WebWorker&&n){const e=yield n();if(e)return e}}))}attachTokenToRequestConfig(e){return t(this,void 0,void 0,(function*(){const t=Object.assign({attachToken:!0},e);t.attachToken&&(t.shouldAttachIDPAccessToken?e.headers=Object.assign(Object.assign({},e.headers),{Authorization:`Bearer ${yield this.getIDPAccessToken()}`}):e.headers=Object.assign(Object.assign({},e.headers),{Authorization:`Bearer ${yield this.getAccessToken()}`}))}))}getBasicUserInfo(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getBasicUserInfo()}))}getDecodedIDToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getDecodedIDToken()}))}getDecodedIDPIDToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getDecodedIDToken()}))}getCryptoHelper(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getCryptoHelper()}))}getIDToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getIDToken()}))}getOIDCServiceEndpoints(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getOIDCServiceEndpoints()}))}getAccessToken(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.getAccessToken()}))}getIDPAccessToken(){var e;return t(this,void 0,void 0,(function*(){return null===(e=yield this._dataLayer.getSessionData())||void 0===e?void 0:e.access_token}))}getDataLayer(){return this._dataLayer}isAuthenticated(){return t(this,void 0,void 0,(function*(){return this._authenticationClient.isAuthenticated()}))}}class Ie{constructor(e){this._authenticationClient=e,this._dataLayer=this._authenticationClient.getDataLayer()}refreshAccessTokenAutomatically(e){return t(this,void 0,void 0,(function*(){const l=yield this._dataLayer.getSessionData();if(l.refresh_token){const n=parseInt(l.expires_in),o=setTimeout((()=>t(this,void 0,void 0,(function*(){yield e.refreshAccessToken()}))),1e3*(n<=10?n:n-10));yield this._dataLayer.setTemporaryDataParameter(i,JSON.stringify(o))}}))}getRefreshTimeoutTimer(){return t(this,void 0,void 0,(function*(){return(yield this._dataLayer.getTemporaryDataParameter(i))?JSON.parse(yield this._dataLayer.getTemporaryDataParameter(i)):-1}))}clearRefreshTokenTimeout(e){return t(this,void 0,void 0,(function*(){if(e)return void clearTimeout(e);const t=yield this.getRefreshTimeoutTimer();-1!==t&&clearTimeout(t)}))}}const Ge=(()=>{let l,i,n,o,c,a,s,Z,r,u,b;const h=(e,t,d,s,Z,r,u)=>{l=e,i=t,n=d,o=s,c=r,a=Z,b=u,o>-1&&m(),a>-1&&(Z=setInterval((()=>{g()}),1e3*a))},m=()=>t(void 0,void 0,void 0,(function*(){var e;if(!i||!l||!c)return;const d="opIFrame";const a=document.getElementById(le);(null===(e=null==a?void 0:a.contentDocument)||void 0===e?void 0:e.getElementById(d)).src=i+"?client_id="+l+"&redirect_uri="+c,Z=setInterval((function(){var e;return t(this,void 0,void 0,(function*(){const t=yield n();if(Boolean(l)&&Boolean(t)){const n=`${l} ${t}`,o=document.getElementById(le),c=(null===(e=null==o?void 0:o.contentDocument)||void 0===e?void 0:e.getElementById(d)).contentWindow;null==c||c.postMessage(n,i)}}))}),1e3*o),G()})),I=()=>{clearInterval(Z),clearInterval(undefined)},G=()=>{null===window||void 0===window||window.addEventListener("message",(function(e){var l;return t(this,void 0,void 0,(function*(){const t=i;!t||(null==t?void 0:t.indexOf(e.origin))<0||(null===(l=null==e?void 0:e.data)||void 0===l?void 0:l.type)===$||"unchanged"===e.data||("error"===e.data?window.location.href=yield s():"changed"===e.data&&g())}))}),!1)},g=()=>t(void 0,void 0,void 0,(function*(){var t;const l=document.getElementById(le),i=null===(t=null==l?void 0:l.contentDocument)||void 0===t?void 0:t.getElementById(ie);if(he.canSendPromptNoneRequest()){he.setPromptNoneRequestSent(!0);const t=e=>{var l,i,n;(null===(l=null==e?void 0:e.data)||void 0===l?void 0:l.type)===$&&(u(null!==(n=null===(i=null==e?void 0:e.data)||void 0===i?void 0:i.data)&&void 0!==n?n:""),null===window||void 0===window||window.removeEventListener("message",t))};r!==e.Storage.BrowserMemory&&r!==e.Storage.WebWorker||null===window||void 0===window||window.addEventListener("message",t);const l=yield b({prompt:"none",responseMode:"query",state:ne});i.src=l}})),X=l=>t(void 0,void 0,void 0,(function*(){var t,i;const n=new URL(window.location.href).searchParams.get(re),o=new URL(window.location.href).searchParams.get(d),c=window.parent.parent;if(null!==n&&(n.includes(ne)||n.includes(oe))){const d=new URL(window.location.href).searchParams.get("code");if(null!==d&&0!==d.length){if(n.includes(oe)){const e={data:{code:d,sessionState:null!=o?o:"",state:n},type:O};return sessionStorage.setItem(de,"false"),c.postMessage(e,c.origin),he.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield he.waitTillPageRedirect(),!0}const a=new URL(window.location.href).searchParams.get("session_state");if(r===e.Storage.LocalStorage||r===e.Storage.SessionStorage)l&&(yield l(a));else{const e={data:null!=a?a:"",type:$};null===(i=null===(t=null===window||void 0===window?void 0:window.parent)||void 0===t?void 0:t.parent)||void 0===i||i.postMessage(e)}return he.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield he.waitTillPageRedirect(),!0}{if(n.includes(oe)){const e={type:_};return window.parent.parent.postMessage(e,c.origin),he.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield he.waitTillPageRedirect(),!0}he.setPromptNoneRequestSent(!1);const e=yield s();return yield p.clearUserSessionData(),c.location.href=e,window.location.href="about:blank",yield he.waitTillPageRedirect(),!0}}return!1}));return(e,l,i)=>t(void 0,void 0,void 0,(function*(){var t;let n=document.createElement("iframe");n.setAttribute("id",le),n.style.display="none";let o=!1;n.onload=()=>{var e,t,l,i;n=document.getElementById(le);const d=null==n?void 0:n.contentDocument,c=null==d?void 0:d.createElement("iframe");c&&(c.setAttribute("id","opIFrame"),c.style.display="none");const a=null==d?void 0:d.createElement("iframe");a&&(a.setAttribute("id",ie),a.style.display="none"),c&&(null===(t=null===(e=null==n?void 0:n.contentDocument)||void 0===e?void 0:e.body)||void 0===t||t.appendChild(c)),a&&(null===(i=null===(l=null==n?void 0:n.contentDocument)||void 0===l?void 0:l.body)||void 0===i||i.appendChild(a)),o=!0},null===(t=null===document||void 0===document?void 0:document.body)||void 0===t||t.appendChild(n),s=e,r=l,u=i;for(;!1===o;)yield new Promise((e=>setTimeout(e,1)));return{initialize:h,receivePromptNoneResponse:X,reset:I}}))})();var pe="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function ge(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function Xe(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(l){var i=Object.getOwnPropertyDescriptor(e,l);Object.defineProperty(t,l,i.get?i:{enumerable:!0,get:function(){return e[l]}})})),t}var ye={exports:{}},Ve=function(e,t){return function(){for(var l=new Array(arguments.length),i=0;i<l.length;i++)l[i]=arguments[i];return e.apply(t,l)}},We=Ve,Ce=Object.prototype.toString;function Re(e){return Array.isArray(e)}function Se(e){return void 0===e}function Ye(e){return"[object ArrayBuffer]"===Ce.call(e)}function ve(e){return null!==e&&"object"==typeof e}function Ke(e){if("[object Object]"!==Ce.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function Ne(e){return"[object Function]"===Ce.call(e)}function Je(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),Re(e))for(var l=0,i=e.length;l<i;l++)t.call(null,e[l],l,e);else for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.call(null,e[n],n,e)}var He={isArray:Re,isArrayBuffer:Ye,isBuffer:function(e){return null!==e&&!Se(e)&&null!==e.constructor&&!Se(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"[object FormData]"===Ce.call(e)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&Ye(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:ve,isPlainObject:Ke,isUndefined:Se,isDate:function(e){return"[object Date]"===Ce.call(e)},isFile:function(e){return"[object File]"===Ce.call(e)},isBlob:function(e){return"[object Blob]"===Ce.call(e)},isFunction:Ne,isStream:function(e){return ve(e)&&Ne(e.pipe)},isURLSearchParams:function(e){return"[object URLSearchParams]"===Ce.call(e)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:Je,merge:function e(){var t={};function l(l,i){Ke(t[i])&&Ke(l)?t[i]=e(t[i],l):Ke(l)?t[i]=e({},l):Re(l)?t[i]=l.slice():t[i]=l}for(var i=0,n=arguments.length;i<n;i++)Je(arguments[i],l);return t},extend:function(e,t,l){return Je(t,(function(t,i){e[i]=l&&"function"==typeof t?We(t,l):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}},ke=He;function Le(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var fe=function(e,t,l){if(!t)return e;var i;if(l)i=l(t);else if(ke.isURLSearchParams(t))i=t.toString();else{var n=[];ke.forEach(t,(function(e,t){null!=e&&(ke.isArray(e)?t+="[]":e=[e],ke.forEach(e,(function(e){ke.isDate(e)?e=e.toISOString():ke.isObject(e)&&(e=JSON.stringify(e)),n.push(Le(t)+"="+Le(e))})))})),i=n.join("&")}if(i){var o=e.indexOf("#");-1!==o&&(e=e.slice(0,o)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e},Ue=He;function Te(){this.handlers=[]}Te.prototype.use=function(e,t,l){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!l&&l.synchronous,runWhen:l?l.runWhen:null}),this.handlers.length-1},Te.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},Te.prototype.forEach=function(e){Ue.forEach(this.handlers,(function(t){null!==t&&e(t)}))};var Be=Te,Fe="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function Ae(){throw new Error("setTimeout has not been defined")}function ze(){throw new Error("clearTimeout has not been defined")}var xe=Ae,we=ze;function Pe(e){if(xe===setTimeout)return setTimeout(e,0);if((xe===Ae||!xe)&&setTimeout)return xe=setTimeout,setTimeout(e,0);try{return xe(e,0)}catch(t){try{return xe.call(null,e,0)}catch(t){return xe.call(this,e,0)}}}"function"==typeof Fe.setTimeout&&(xe=setTimeout),"function"==typeof Fe.clearTimeout&&(we=clearTimeout);var Qe,Me=[],je=!1,Ee=-1;function De(){je&&Qe&&(je=!1,Qe.length?Me=Qe.concat(Me):Ee=-1,Me.length&&Oe())}function Oe(){if(!je){var e=Pe(De);je=!0;for(var t=Me.length;t;){for(Qe=Me,Me=[];++Ee<t;)Qe&&Qe[Ee].run();Ee=-1,t=Me.length}Qe=null,je=!1,function(e){if(we===clearTimeout)return clearTimeout(e);if((we===ze||!we)&&clearTimeout)return we=clearTimeout,clearTimeout(e);try{we(e)}catch(t){try{return we.call(null,e)}catch(t){return we.call(this,e)}}}(e)}}function _e(e,t){this.fun=e,this.array=t}_e.prototype.run=function(){this.fun.apply(null,this.array)};function qe(){}var $e=qe,et=qe,tt=qe,lt=qe,it=qe,nt=qe,ot=qe;var dt=Fe.performance||{},ct=dt.now||dt.mozNow||dt.msNow||dt.oNow||dt.webkitNow||function(){return(new Date).getTime()};var at=new Date;var st={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var l=1;l<arguments.length;l++)t[l-1]=arguments[l];Me.push(new _e(e,t)),1!==Me.length||je||Pe(Oe)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:$e,addListener:et,once:tt,off:lt,removeListener:it,removeAllListeners:nt,emit:ot,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*ct.call(dt),l=Math.floor(t),i=Math.floor(t%1*1e9);return e&&(l-=e[0],(i-=e[1])<0&&(l--,i+=1e9)),[l,i]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-at)/1e3}},Zt=st,rt=He,ut=function(e,t,l,i,n){return e.config=t,l&&(e.code=l),e.request=i,e.response=n,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e},bt={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},ht=ut,mt=function(e,t,l,i,n){var o=new Error(e);return ht(o,t,l,i,n)},It=mt,Gt=He,pt=Gt.isStandardBrowserEnv()?{write:function(e,t,l,i,n,o){var d=[];d.push(e+"="+encodeURIComponent(t)),Gt.isNumber(l)&&d.push("expires="+new Date(l).toGMTString()),Gt.isString(i)&&d.push("path="+i),Gt.isString(n)&&d.push("domain="+n),!0===o&&d.push("secure"),document.cookie=d.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},gt=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)},Xt=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e},yt=He,Vt=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],Wt=He,Ct=Wt.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),l=document.createElement("a");function i(e){var i=e;return t&&(l.setAttribute("href",i),i=l.href),l.setAttribute("href",i),{href:l.href,protocol:l.protocol?l.protocol.replace(/:$/,""):"",host:l.host,search:l.search?l.search.replace(/^\?/,""):"",hash:l.hash?l.hash.replace(/^#/,""):"",hostname:l.hostname,port:l.port,pathname:"/"===l.pathname.charAt(0)?l.pathname:"/"+l.pathname}}return e=i(window.location.href),function(t){var l=Wt.isString(t)?i(t):t;return l.protocol===e.protocol&&l.host===e.host}}():function(){return!0};function Rt(e){this.message=e}Rt.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},Rt.prototype.__CANCEL__=!0;var St=Rt,Yt=He,vt=function(e,t,l){var i=l.config.validateStatus;l.status&&i&&!i(l.status)?t(It("Request failed with status code "+l.status,l.config,null,l.request,l)):e(l)},Kt=pt,Nt=fe,Jt=function(e,t){return e&&!gt(t)?Xt(e,t):t},Ht=function(e){var t,l,i,n={};return e?(yt.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=yt.trim(e.substr(0,i)).toLowerCase(),l=yt.trim(e.substr(i+1)),t){if(n[t]&&Vt.indexOf(t)>=0)return;n[t]="set-cookie"===t?(n[t]?n[t]:[]).concat([l]):n[t]?n[t]+", "+l:l}})),n):n},kt=Ct,Lt=mt,ft=bt,Ut=St,Tt=function(e){return new Promise((function(t,l){var i,n=e.data,o=e.headers,d=e.responseType;function c(){e.cancelToken&&e.cancelToken.unsubscribe(i),e.signal&&e.signal.removeEventListener("abort",i)}Yt.isFormData(n)&&delete o["Content-Type"];var a=new XMLHttpRequest;if(e.auth){var s=e.auth.username||"",Z=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";o.Authorization="Basic "+btoa(s+":"+Z)}var r=Jt(e.baseURL,e.url);function u(){if(a){var i="getAllResponseHeaders"in a?Ht(a.getAllResponseHeaders()):null,n={data:d&&"text"!==d&&"json"!==d?a.response:a.responseText,status:a.status,statusText:a.statusText,headers:i,config:e,request:a};vt((function(e){t(e),c()}),(function(e){l(e),c()}),n),a=null}}if(a.open(e.method.toUpperCase(),Nt(r,e.params,e.paramsSerializer),!0),a.timeout=e.timeout,"onloadend"in a?a.onloadend=u:a.onreadystatechange=function(){a&&4===a.readyState&&(0!==a.status||a.responseURL&&0===a.responseURL.indexOf("file:"))&&setTimeout(u)},a.onabort=function(){a&&(l(Lt("Request aborted",e,"ECONNABORTED",a)),a=null)},a.onerror=function(){l(Lt("Network Error",e,null,a)),a=null},a.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",i=e.transitional||ft;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),l(Lt(t,e,i.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",a)),a=null},Yt.isStandardBrowserEnv()){var b=(e.withCredentials||kt(r))&&e.xsrfCookieName?Kt.read(e.xsrfCookieName):void 0;b&&(o[e.xsrfHeaderName]=b)}"setRequestHeader"in a&&Yt.forEach(o,(function(e,t){void 0===n&&"content-type"===t.toLowerCase()?delete o[t]:a.setRequestHeader(t,e)})),Yt.isUndefined(e.withCredentials)||(a.withCredentials=!!e.withCredentials),d&&"json"!==d&&(a.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&a.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&a.upload&&a.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(i=function(e){a&&(l(!e||e&&e.type?new Ut("canceled"):e),a.abort(),a=null)},e.cancelToken&&e.cancelToken.subscribe(i),e.signal&&(e.signal.aborted?i():e.signal.addEventListener("abort",i))),n||(n=null),a.send(n)}))},Bt=He,Ft=function(e,t){rt.forEach(e,(function(l,i){i!==t&&i.toUpperCase()===t.toUpperCase()&&(e[t]=l,delete e[i])}))},At=ut,zt={"Content-Type":"application/x-www-form-urlencoded"};function xt(e,t){!Bt.isUndefined(e)&&Bt.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var wt,Pt={transitional:bt,adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==Zt&&"[object process]"===Object.prototype.toString.call(Zt))&&(wt=Tt),wt),transformRequest:[function(e,t){return Ft(t,"Accept"),Ft(t,"Content-Type"),Bt.isFormData(e)||Bt.isArrayBuffer(e)||Bt.isBuffer(e)||Bt.isStream(e)||Bt.isFile(e)||Bt.isBlob(e)?e:Bt.isArrayBufferView(e)?e.buffer:Bt.isURLSearchParams(e)?(xt(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):Bt.isObject(e)||t&&"application/json"===t["Content-Type"]?(xt(t,"application/json"),function(e,t,l){if(Bt.isString(e))try{return(t||JSON.parse)(e),Bt.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(l||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||Pt.transitional,l=t&&t.silentJSONParsing,i=t&&t.forcedJSONParsing,n=!l&&"json"===this.responseType;if(n||i&&Bt.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw At(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};Bt.forEach(["delete","get","head"],(function(e){Pt.headers[e]={}})),Bt.forEach(["post","put","patch"],(function(e){Pt.headers[e]=Bt.merge(zt)}));var Qt=Pt,Mt=He,jt=Qt,Et=function(e){return!(!e||!e.__CANCEL__)},Dt=He,Ot=function(e,t,l){var i=this||jt;return Mt.forEach(l,(function(l){e=l.call(i,e,t)})),e},_t=Et,qt=Qt,$t=St;function el(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new $t("canceled")}var tl=He,ll=function(e,t){t=t||{};var l={};function i(e,t){return tl.isPlainObject(e)&&tl.isPlainObject(t)?tl.merge(e,t):tl.isPlainObject(t)?tl.merge({},t):tl.isArray(t)?t.slice():t}function n(l){return tl.isUndefined(t[l])?tl.isUndefined(e[l])?void 0:i(void 0,e[l]):i(e[l],t[l])}function o(e){if(!tl.isUndefined(t[e]))return i(void 0,t[e])}function d(l){return tl.isUndefined(t[l])?tl.isUndefined(e[l])?void 0:i(void 0,e[l]):i(void 0,t[l])}function c(l){return l in t?i(e[l],t[l]):l in e?i(void 0,e[l]):void 0}var a={url:o,method:o,data:o,baseURL:d,transformRequest:d,transformResponse:d,paramsSerializer:d,timeout:d,timeoutMessage:d,withCredentials:d,adapter:d,responseType:d,xsrfCookieName:d,xsrfHeaderName:d,onUploadProgress:d,onDownloadProgress:d,decompress:d,maxContentLength:d,maxBodyLength:d,transport:d,httpAgent:d,httpsAgent:d,cancelToken:d,socketPath:d,responseEncoding:d,validateStatus:c};return tl.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=a[e]||n,i=t(e);tl.isUndefined(i)&&t!==c||(l[e]=i)})),l},il="0.26.1",nl=il,ol={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){ol[e]=function(l){return typeof l===e||"a"+(t<1?"n ":" ")+e}}));var dl={};ol.transitional=function(e,t,l){function i(e,t){return"[Axios v"+nl+"] Transitional option '"+e+"'"+t+(l?". "+l:"")}return function(l,n,o){if(!1===e)throw new Error(i(n," has been removed"+(t?" in "+t:"")));return t&&!dl[n]&&(dl[n]=!0,console.warn(i(n," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(l,n,o)}};var cl={assertOptions:function(e,t,l){if("object"!=typeof e)throw new TypeError("options must be an object");for(var i=Object.keys(e),n=i.length;n-- >0;){var o=i[n],d=t[o];if(d){var c=e[o],a=void 0===c||d(c,o,e);if(!0!==a)throw new TypeError("option "+o+" must be "+a)}else if(!0!==l)throw Error("Unknown option "+o)}},validators:ol},al=He,sl=fe,Zl=Be,rl=function(e){return el(e),e.headers=e.headers||{},e.data=Ot.call(e,e.data,e.headers,e.transformRequest),e.headers=Dt.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),Dt.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||qt.adapter)(e).then((function(t){return el(e),t.data=Ot.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return _t(t)||(el(e),t&&t.response&&(t.response.data=Ot.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))},ul=ll,bl=cl,hl=bl.validators;function ml(e){this.defaults=e,this.interceptors={request:new Zl,response:new Zl}}ml.prototype.request=function(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=ul(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var l=t.transitional;void 0!==l&&bl.assertOptions(l,{silentJSONParsing:hl.transitional(hl.boolean),forcedJSONParsing:hl.transitional(hl.boolean),clarifyTimeoutError:hl.transitional(hl.boolean)},!1);var i=[],n=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(n=n&&e.synchronous,i.unshift(e.fulfilled,e.rejected))}));var o,d=[];if(this.interceptors.response.forEach((function(e){d.push(e.fulfilled,e.rejected)})),!n){var c=[rl,void 0];for(Array.prototype.unshift.apply(c,i),c=c.concat(d),o=Promise.resolve(t);c.length;)o=o.then(c.shift(),c.shift());return o}for(var a=t;i.length;){var s=i.shift(),Z=i.shift();try{a=s(a)}catch(e){Z(e);break}}try{o=rl(a)}catch(e){return Promise.reject(e)}for(;d.length;)o=o.then(d.shift(),d.shift());return o},ml.prototype.getUri=function(e){return e=ul(this.defaults,e),sl(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},al.forEach(["delete","get","head","options"],(function(e){ml.prototype[e]=function(t,l){return this.request(ul(l||{},{method:e,url:t,data:(l||{}).data}))}})),al.forEach(["post","put","patch"],(function(e){ml.prototype[e]=function(t,l,i){return this.request(ul(i||{},{method:e,url:t,data:l}))}}));var Il=ml,Gl=St;function pl(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var l=this;this.promise.then((function(e){if(l._listeners){var t,i=l._listeners.length;for(t=0;t<i;t++)l._listeners[t](e);l._listeners=null}})),this.promise.then=function(e){var t,i=new Promise((function(e){l.subscribe(e),t=e})).then(e);return i.cancel=function(){l.unsubscribe(t)},i},e((function(e){l.reason||(l.reason=new Gl(e),t(l.reason))}))}pl.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},pl.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},pl.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},pl.source=function(){var e,t=new pl((function(t){e=t}));return{token:t,cancel:e}};var gl=pl,Xl=He,yl=He,Vl=Ve,Wl=Il,Cl=ll;var Rl=function e(t){var l=new Wl(t),i=Vl(Wl.prototype.request,l);return yl.extend(i,Wl.prototype,l),yl.extend(i,l),i.create=function(l){return e(Cl(t,l))},i}(Qt);Rl.Axios=Wl,Rl.Cancel=St,Rl.CancelToken=gl,Rl.isCancel=Et,Rl.VERSION=il,Rl.all=function(e){return Promise.all(e)},Rl.spread=function(e){return function(t){return e.apply(null,t)}},Rl.isAxiosError=function(e){return Xl.isObject(e)&&!0===e.isAxiosError},ye.exports=Rl,ye.exports.default=Rl;var Sl,Yl=ye.exports;let vl=Sl=class{constructor(){this.attachToken=()=>Promise.resolve(),this.requestStartCallback=()=>null,this.requestSuccessCallback=()=>null,this.requestErrorCallback=()=>null,this.requestFinishCallback=()=>null,this.init=this.init.bind(this),this.setHttpRequestErrorCallback=this.setHttpRequestErrorCallback.bind(this),this.setHttpRequestFinishCallback=this.setHttpRequestFinishCallback.bind(this),this.setHttpRequestStartCallback=this.setHttpRequestStartCallback.bind(this),this.setHttpRequestSuccessCallback=this.setHttpRequestSuccessCallback.bind(this)}static getInstance(){return this.axiosInstance||(this.axiosInstance=Yl.create({withCredentials:!0}),this.clientInstance||(this.clientInstance=new Sl),this.axiosInstance.interceptors.request.use((e=>t(this,void 0,void 0,(function*(){return yield this.clientInstance.requestHandler(e)})))),this.axiosInstance.interceptors.response.use((e=>this.clientInstance.successHandler(e)),(e=>this.clientInstance.errorHandler(e))),this.axiosInstance.all=Yl.all,this.axiosInstance.spread=Yl.spread,this.axiosInstance.init=this.clientInstance.init,this.axiosInstance.enableHandler=this.clientInstance.enableHandler,this.axiosInstance.disableHandler=this.clientInstance.disableHandler,this.axiosInstance.disableHandlerWithTimeout=this.clientInstance.disableHandlerWithTimeout,this.axiosInstance.setHttpRequestStartCallback=this.clientInstance.setHttpRequestStartCallback,this.axiosInstance.setHttpRequestSuccessCallback=this.clientInstance.setHttpRequestSuccessCallback,this.axiosInstance.setHttpRequestErrorCallback=this.clientInstance.setHttpRequestErrorCallback,this.axiosInstance.setHttpRequestFinishCallback=this.clientInstance.setHttpRequestFinishCallback),this.axiosInstance}requestHandler(e){return t(this,void 0,void 0,(function*(){if(yield this.attachToken(e),null==e?void 0:e.shouldEncodeToFormData){const t=null==e?void 0:e.data,l=new FormData;Object.keys(t).forEach((e=>{l.append(e,t[e])})),e.data=l}return e.startTimeInMs=(new Date).getTime(),Sl.isHandlerEnabled&&this.requestStartCallback&&"function"==typeof this.requestStartCallback&&this.requestStartCallback(e),e}))}errorHandler(e){throw Sl.isHandlerEnabled&&(this.requestErrorCallback&&"function"==typeof this.requestErrorCallback&&this.requestErrorCallback(e),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),e}successHandler(e){return Sl.isHandlerEnabled&&(this.requestSuccessCallback&&"function"==typeof this.requestSuccessCallback&&this.requestSuccessCallback(e),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),e}init(e=!0,l){return t(this,void 0,void 0,(function*(){Sl.isHandlerEnabled=e,this.attachToken=l}))}enableHandler(){Sl.isHandlerEnabled=!0}disableHandler(){Sl.isHandlerEnabled=!1}disableHandlerWithTimeout(e=Sl.DEFAULT_HANDLER_DISABLE_TIMEOUT){Sl.isHandlerEnabled=!1,setTimeout((()=>{Sl.isHandlerEnabled=!0}),e)}setHttpRequestStartCallback(e){this.requestStartCallback=e}setHttpRequestSuccessCallback(e){this.requestSuccessCallback=e}setHttpRequestErrorCallback(e){this.requestErrorCallback=e}setHttpRequestFinishCallback(e){this.requestFinishCallback=e}};vl.DEFAULT_HANDLER_DISABLE_TIMEOUT=1e3,vl=Sl=function(e,t,l,i){var n,o=arguments.length,d=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,l):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,t,l,i);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(d=(o<3?n(d):o>3?n(t,l,d):n(t,l))||d);return o>3&&d&&Object.defineProperty(t,l,d),d}([e=>{}],vl);class Kl{setData(e,l){return t(this,void 0,void 0,(function*(){localStorage.setItem(e,l)}))}getData(e){var l;return t(this,void 0,void 0,(function*(){return null!==(l=localStorage.getItem(e))&&void 0!==l?l:"{}"}))}removeData(e){return t(this,void 0,void 0,(function*(){localStorage.removeItem(e)}))}}class Nl{constructor(){this._data=new Map}setData(e,l){return t(this,void 0,void 0,(function*(){this._data.set(e,l)}))}getData(e){var l,i;return t(this,void 0,void 0,(function*(){return null!==(i=null===(l=this._data)||void 0===l?void 0:l.get(e))&&void 0!==i?i:"{}"}))}removeData(e){return t(this,void 0,void 0,(function*(){this._data.delete(e)}))}}class Jl{setData(e,l){return t(this,void 0,void 0,(function*(){sessionStorage.setItem(e,l)}))}getData(e){var l;return t(this,void 0,void 0,(function*(){return null!==(l=sessionStorage.getItem(e))&&void 0!==l?l:"{}"}))}removeData(e){return t(this,void 0,void 0,(function*(){sessionStorage.removeItem(e)}))}}var Hl=[],kl=[],Ll="undefined"!=typeof Uint8Array?Uint8Array:Array,fl=!1;function Ul(){fl=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,l=e.length;t<l;++t)Hl[t]=e[t],kl[e.charCodeAt(t)]=t;kl["-".charCodeAt(0)]=62,kl["_".charCodeAt(0)]=63}function Tl(e,t,l){for(var i,n,o=[],d=t;d<l;d+=3)i=(e[d]<<16)+(e[d+1]<<8)+e[d+2],o.push(Hl[(n=i)>>18&63]+Hl[n>>12&63]+Hl[n>>6&63]+Hl[63&n]);return o.join("")}function Bl(e){var t;fl||Ul();for(var l=e.length,i=l%3,n="",o=[],d=16383,c=0,a=l-i;c<a;c+=d)o.push(Tl(e,c,c+d>a?a:c+d));return 1===i?(t=e[l-1],n+=Hl[t>>2],n+=Hl[t<<4&63],n+="=="):2===i&&(t=(e[l-2]<<8)+e[l-1],n+=Hl[t>>10],n+=Hl[t>>4&63],n+=Hl[t<<2&63],n+="="),o.push(n),o.join("")}function Fl(e,t,l,i,n){var o,d,c=8*n-i-1,a=(1<<c)-1,s=a>>1,Z=-7,r=l?n-1:0,u=l?-1:1,b=e[t+r];for(r+=u,o=b&(1<<-Z)-1,b>>=-Z,Z+=c;Z>0;o=256*o+e[t+r],r+=u,Z-=8);for(d=o&(1<<-Z)-1,o>>=-Z,Z+=i;Z>0;d=256*d+e[t+r],r+=u,Z-=8);if(0===o)o=1-s;else{if(o===a)return d?NaN:1/0*(b?-1:1);d+=Math.pow(2,i),o-=s}return(b?-1:1)*d*Math.pow(2,o-i)}function Al(e,t,l,i,n,o){var d,c,a,s=8*o-n-1,Z=(1<<s)-1,r=Z>>1,u=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,b=i?0:o-1,h=i?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(c=isNaN(t)?1:0,d=Z):(d=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-d))<1&&(d--,a*=2),(t+=d+r>=1?u/a:u*Math.pow(2,1-r))*a>=2&&(d++,a/=2),d+r>=Z?(c=0,d=Z):d+r>=1?(c=(t*a-1)*Math.pow(2,n),d+=r):(c=t*Math.pow(2,r-1)*Math.pow(2,n),d=0));n>=8;e[l+b]=255&c,b+=h,c/=256,n-=8);for(d=d<<n|c,s+=n;s>0;e[l+b]=255&d,b+=h,d/=256,s-=8);e[l+b-h]|=128*m}var zl={}.toString,xl=Array.isArray||function(e){return"[object Array]"==zl.call(e)};Ml.TYPED_ARRAY_SUPPORT=void 0===Fe.TYPED_ARRAY_SUPPORT||Fe.TYPED_ARRAY_SUPPORT;var wl=Pl();function Pl(){return Ml.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Ql(e,t){if(Pl()<t)throw new RangeError("Invalid typed array length");return Ml.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=Ml.prototype:(null===e&&(e=new Ml(t)),e.length=t),e}function Ml(e,t,l){if(!(Ml.TYPED_ARRAY_SUPPORT||this instanceof Ml))return new Ml(e,t,l);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return Dl(this,e)}return jl(this,e,t,l)}function jl(e,t,l,i){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,l,i){if(t.byteLength,l<0||t.byteLength<l)throw new RangeError("'offset' is out of bounds");if(t.byteLength<l+(i||0))throw new RangeError("'length' is out of bounds");t=void 0===l&&void 0===i?new Uint8Array(t):void 0===i?new Uint8Array(t,l):new Uint8Array(t,l,i);Ml.TYPED_ARRAY_SUPPORT?(e=t).__proto__=Ml.prototype:e=Ol(e,t);return e}(e,t,l,i):"string"==typeof t?function(e,t,l){"string"==typeof l&&""!==l||(l="utf8");if(!Ml.isEncoding(l))throw new TypeError('"encoding" must be a valid string encoding');var i=0|$l(t,l),n=(e=Ql(e,i)).write(t,l);n!==i&&(e=e.slice(0,n));return e}(e,t,l):function(e,t){if(ql(t)){var l=0|_l(t.length);return 0===(e=Ql(e,l)).length||t.copy(e,0,0,l),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(i=t.length)!=i?Ql(e,0):Ol(e,t);if("Buffer"===t.type&&xl(t.data))return Ol(e,t.data)}var i;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function El(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function Dl(e,t){if(El(t),e=Ql(e,t<0?0:0|_l(t)),!Ml.TYPED_ARRAY_SUPPORT)for(var l=0;l<t;++l)e[l]=0;return e}function Ol(e,t){var l=t.length<0?0:0|_l(t.length);e=Ql(e,l);for(var i=0;i<l;i+=1)e[i]=255&t[i];return e}function _l(e){if(e>=Pl())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Pl().toString(16)+" bytes");return 0|e}function ql(e){return!(null==e||!e._isBuffer)}function $l(e,t){if(ql(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var l=e.length;if(0===l)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return l;case"utf8":case"utf-8":case void 0:return Si(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*l;case"hex":return l>>>1;case"base64":return Yi(e).length;default:if(i)return Si(e).length;t=(""+t).toLowerCase(),i=!0}}function ei(e,t,l){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===l||l>this.length)&&(l=this.length),l<=0)return"";if((l>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return mi(this,t,l);case"utf8":case"utf-8":return ri(this,t,l);case"ascii":return bi(this,t,l);case"latin1":case"binary":return hi(this,t,l);case"base64":return Zi(this,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Ii(this,t,l);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}function ti(e,t,l){var i=e[t];e[t]=e[l],e[l]=i}function li(e,t,l,i,n){if(0===e.length)return-1;if("string"==typeof l?(i=l,l=0):l>2147483647?l=2147483647:l<-2147483648&&(l=-2147483648),l=+l,isNaN(l)&&(l=n?0:e.length-1),l<0&&(l=e.length+l),l>=e.length){if(n)return-1;l=e.length-1}else if(l<0){if(!n)return-1;l=0}if("string"==typeof t&&(t=Ml.from(t,i)),ql(t))return 0===t.length?-1:ii(e,t,l,i,n);if("number"==typeof t)return t&=255,Ml.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(e,t,l):Uint8Array.prototype.lastIndexOf.call(e,t,l):ii(e,[t],l,i,n);throw new TypeError("val must be string, number or Buffer")}function ii(e,t,l,i,n){var o,d=1,c=e.length,a=t.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;d=2,c/=2,a/=2,l/=2}function s(e,t){return 1===d?e[t]:e.readUInt16BE(t*d)}if(n){var Z=-1;for(o=l;o<c;o++)if(s(e,o)===s(t,-1===Z?0:o-Z)){if(-1===Z&&(Z=o),o-Z+1===a)return Z*d}else-1!==Z&&(o-=o-Z),Z=-1}else for(l+a>c&&(l=c-a),o=l;o>=0;o--){for(var r=!0,u=0;u<a;u++)if(s(e,o+u)!==s(t,u)){r=!1;break}if(r)return o}return-1}function ni(e,t,l,i){l=Number(l)||0;var n=e.length-l;i?(i=Number(i))>n&&(i=n):i=n;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");i>o/2&&(i=o/2);for(var d=0;d<i;++d){var c=parseInt(t.substr(2*d,2),16);if(isNaN(c))return d;e[l+d]=c}return d}function oi(e,t,l,i){return vi(Si(t,e.length-l),e,l,i)}function di(e,t,l,i){return vi(function(e){for(var t=[],l=0;l<e.length;++l)t.push(255&e.charCodeAt(l));return t}(t),e,l,i)}function ci(e,t,l,i){return di(e,t,l,i)}function ai(e,t,l,i){return vi(Yi(t),e,l,i)}function si(e,t,l,i){return vi(function(e,t){for(var l,i,n,o=[],d=0;d<e.length&&!((t-=2)<0);++d)i=(l=e.charCodeAt(d))>>8,n=l%256,o.push(n),o.push(i);return o}(t,e.length-l),e,l,i)}function Zi(e,t,l){return 0===t&&l===e.length?Bl(e):Bl(e.slice(t,l))}function ri(e,t,l){l=Math.min(e.length,l);for(var i=[],n=t;n<l;){var o,d,c,a,s=e[n],Z=null,r=s>239?4:s>223?3:s>191?2:1;if(n+r<=l)switch(r){case 1:s<128&&(Z=s);break;case 2:128==(192&(o=e[n+1]))&&(a=(31&s)<<6|63&o)>127&&(Z=a);break;case 3:o=e[n+1],d=e[n+2],128==(192&o)&&128==(192&d)&&(a=(15&s)<<12|(63&o)<<6|63&d)>2047&&(a<55296||a>57343)&&(Z=a);break;case 4:o=e[n+1],d=e[n+2],c=e[n+3],128==(192&o)&&128==(192&d)&&128==(192&c)&&(a=(15&s)<<18|(63&o)<<12|(63&d)<<6|63&c)>65535&&a<1114112&&(Z=a)}null===Z?(Z=65533,r=1):Z>65535&&(Z-=65536,i.push(Z>>>10&1023|55296),Z=56320|1023&Z),i.push(Z),n+=r}return function(e){var t=e.length;if(t<=ui)return String.fromCharCode.apply(String,e);var l="",i=0;for(;i<t;)l+=String.fromCharCode.apply(String,e.slice(i,i+=ui));return l}(i)}Ml.poolSize=8192,Ml._augment=function(e){return e.__proto__=Ml.prototype,e},Ml.from=function(e,t,l){return jl(null,e,t,l)},Ml.TYPED_ARRAY_SUPPORT&&(Ml.prototype.__proto__=Uint8Array.prototype,Ml.__proto__=Uint8Array),Ml.alloc=function(e,t,l){return function(e,t,l,i){return El(t),t<=0?Ql(e,t):void 0!==l?"string"==typeof i?Ql(e,t).fill(l,i):Ql(e,t).fill(l):Ql(e,t)}(null,e,t,l)},Ml.allocUnsafe=function(e){return Dl(null,e)},Ml.allocUnsafeSlow=function(e){return Dl(null,e)},Ml.isBuffer=Ki,Ml.compare=function(e,t){if(!ql(e)||!ql(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var l=e.length,i=t.length,n=0,o=Math.min(l,i);n<o;++n)if(e[n]!==t[n]){l=e[n],i=t[n];break}return l<i?-1:i<l?1:0},Ml.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Ml.concat=function(e,t){if(!xl(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Ml.alloc(0);var l;if(void 0===t)for(t=0,l=0;l<e.length;++l)t+=e[l].length;var i=Ml.allocUnsafe(t),n=0;for(l=0;l<e.length;++l){var o=e[l];if(!ql(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(i,n),n+=o.length}return i},Ml.byteLength=$l,Ml.prototype._isBuffer=!0,Ml.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)ti(this,t,t+1);return this},Ml.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)ti(this,t,t+3),ti(this,t+1,t+2);return this},Ml.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)ti(this,t,t+7),ti(this,t+1,t+6),ti(this,t+2,t+5),ti(this,t+3,t+4);return this},Ml.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?ri(this,0,e):ei.apply(this,arguments)},Ml.prototype.equals=function(e){if(!ql(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Ml.compare(this,e)},Ml.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Ml.prototype.compare=function(e,t,l,i,n){if(!ql(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===l&&(l=e?e.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),t<0||l>e.length||i<0||n>this.length)throw new RangeError("out of range index");if(i>=n&&t>=l)return 0;if(i>=n)return-1;if(t>=l)return 1;if(this===e)return 0;for(var o=(n>>>=0)-(i>>>=0),d=(l>>>=0)-(t>>>=0),c=Math.min(o,d),a=this.slice(i,n),s=e.slice(t,l),Z=0;Z<c;++Z)if(a[Z]!==s[Z]){o=a[Z],d=s[Z];break}return o<d?-1:d<o?1:0},Ml.prototype.includes=function(e,t,l){return-1!==this.indexOf(e,t,l)},Ml.prototype.indexOf=function(e,t,l){return li(this,e,t,l,!0)},Ml.prototype.lastIndexOf=function(e,t,l){return li(this,e,t,l,!1)},Ml.prototype.write=function(e,t,l,i){if(void 0===t)i="utf8",l=this.length,t=0;else if(void 0===l&&"string"==typeof t)i=t,l=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(l)?(l|=0,void 0===i&&(i="utf8")):(i=l,l=void 0)}var n=this.length-t;if((void 0===l||l>n)&&(l=n),e.length>0&&(l<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var o=!1;;)switch(i){case"hex":return ni(this,e,t,l);case"utf8":case"utf-8":return oi(this,e,t,l);case"ascii":return di(this,e,t,l);case"latin1":case"binary":return ci(this,e,t,l);case"base64":return ai(this,e,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return si(this,e,t,l);default:if(o)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),o=!0}},Ml.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var ui=4096;function bi(e,t,l){var i="";l=Math.min(e.length,l);for(var n=t;n<l;++n)i+=String.fromCharCode(127&e[n]);return i}function hi(e,t,l){var i="";l=Math.min(e.length,l);for(var n=t;n<l;++n)i+=String.fromCharCode(e[n]);return i}function mi(e,t,l){var i=e.length;(!t||t<0)&&(t=0),(!l||l<0||l>i)&&(l=i);for(var n="",o=t;o<l;++o)n+=Ri(e[o]);return n}function Ii(e,t,l){for(var i=e.slice(t,l),n="",o=0;o<i.length;o+=2)n+=String.fromCharCode(i[o]+256*i[o+1]);return n}function Gi(e,t,l){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>l)throw new RangeError("Trying to access beyond buffer length")}function pi(e,t,l,i,n,o){if(!ql(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<o)throw new RangeError('"value" argument is out of bounds');if(l+i>e.length)throw new RangeError("Index out of range")}function gi(e,t,l,i){t<0&&(t=65535+t+1);for(var n=0,o=Math.min(e.length-l,2);n<o;++n)e[l+n]=(t&255<<8*(i?n:1-n))>>>8*(i?n:1-n)}function Xi(e,t,l,i){t<0&&(t=4294967295+t+1);for(var n=0,o=Math.min(e.length-l,4);n<o;++n)e[l+n]=t>>>8*(i?n:3-n)&255}function yi(e,t,l,i,n,o){if(l+i>e.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("Index out of range")}function Vi(e,t,l,i,n){return n||yi(e,0,l,4),Al(e,t,l,i,23,4),l+4}function Wi(e,t,l,i,n){return n||yi(e,0,l,8),Al(e,t,l,i,52,8),l+8}Ml.prototype.slice=function(e,t){var l,i=this.length;if((e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(t=void 0===t?i:~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e),Ml.TYPED_ARRAY_SUPPORT)(l=this.subarray(e,t)).__proto__=Ml.prototype;else{var n=t-e;l=new Ml(n,void 0);for(var o=0;o<n;++o)l[o]=this[o+e]}return l},Ml.prototype.readUIntLE=function(e,t,l){e|=0,t|=0,l||Gi(e,t,this.length);for(var i=this[e],n=1,o=0;++o<t&&(n*=256);)i+=this[e+o]*n;return i},Ml.prototype.readUIntBE=function(e,t,l){e|=0,t|=0,l||Gi(e,t,this.length);for(var i=this[e+--t],n=1;t>0&&(n*=256);)i+=this[e+--t]*n;return i},Ml.prototype.readUInt8=function(e,t){return t||Gi(e,1,this.length),this[e]},Ml.prototype.readUInt16LE=function(e,t){return t||Gi(e,2,this.length),this[e]|this[e+1]<<8},Ml.prototype.readUInt16BE=function(e,t){return t||Gi(e,2,this.length),this[e]<<8|this[e+1]},Ml.prototype.readUInt32LE=function(e,t){return t||Gi(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Ml.prototype.readUInt32BE=function(e,t){return t||Gi(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Ml.prototype.readIntLE=function(e,t,l){e|=0,t|=0,l||Gi(e,t,this.length);for(var i=this[e],n=1,o=0;++o<t&&(n*=256);)i+=this[e+o]*n;return i>=(n*=128)&&(i-=Math.pow(2,8*t)),i},Ml.prototype.readIntBE=function(e,t,l){e|=0,t|=0,l||Gi(e,t,this.length);for(var i=t,n=1,o=this[e+--i];i>0&&(n*=256);)o+=this[e+--i]*n;return o>=(n*=128)&&(o-=Math.pow(2,8*t)),o},Ml.prototype.readInt8=function(e,t){return t||Gi(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Ml.prototype.readInt16LE=function(e,t){t||Gi(e,2,this.length);var l=this[e]|this[e+1]<<8;return 32768&l?4294901760|l:l},Ml.prototype.readInt16BE=function(e,t){t||Gi(e,2,this.length);var l=this[e+1]|this[e]<<8;return 32768&l?4294901760|l:l},Ml.prototype.readInt32LE=function(e,t){return t||Gi(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Ml.prototype.readInt32BE=function(e,t){return t||Gi(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Ml.prototype.readFloatLE=function(e,t){return t||Gi(e,4,this.length),Fl(this,e,!0,23,4)},Ml.prototype.readFloatBE=function(e,t){return t||Gi(e,4,this.length),Fl(this,e,!1,23,4)},Ml.prototype.readDoubleLE=function(e,t){return t||Gi(e,8,this.length),Fl(this,e,!0,52,8)},Ml.prototype.readDoubleBE=function(e,t){return t||Gi(e,8,this.length),Fl(this,e,!1,52,8)},Ml.prototype.writeUIntLE=function(e,t,l,i){(e=+e,t|=0,l|=0,i)||pi(this,e,t,l,Math.pow(2,8*l)-1,0);var n=1,o=0;for(this[t]=255&e;++o<l&&(n*=256);)this[t+o]=e/n&255;return t+l},Ml.prototype.writeUIntBE=function(e,t,l,i){(e=+e,t|=0,l|=0,i)||pi(this,e,t,l,Math.pow(2,8*l)-1,0);var n=l-1,o=1;for(this[t+n]=255&e;--n>=0&&(o*=256);)this[t+n]=e/o&255;return t+l},Ml.prototype.writeUInt8=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,1,255,0),Ml.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Ml.prototype.writeUInt16LE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,2,65535,0),Ml.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):gi(this,e,t,!0),t+2},Ml.prototype.writeUInt16BE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,2,65535,0),Ml.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):gi(this,e,t,!1),t+2},Ml.prototype.writeUInt32LE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,4,4294967295,0),Ml.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):Xi(this,e,t,!0),t+4},Ml.prototype.writeUInt32BE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,4,4294967295,0),Ml.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Xi(this,e,t,!1),t+4},Ml.prototype.writeIntLE=function(e,t,l,i){if(e=+e,t|=0,!i){var n=Math.pow(2,8*l-1);pi(this,e,t,l,n-1,-n)}var o=0,d=1,c=0;for(this[t]=255&e;++o<l&&(d*=256);)e<0&&0===c&&0!==this[t+o-1]&&(c=1),this[t+o]=(e/d>>0)-c&255;return t+l},Ml.prototype.writeIntBE=function(e,t,l,i){if(e=+e,t|=0,!i){var n=Math.pow(2,8*l-1);pi(this,e,t,l,n-1,-n)}var o=l-1,d=1,c=0;for(this[t+o]=255&e;--o>=0&&(d*=256);)e<0&&0===c&&0!==this[t+o+1]&&(c=1),this[t+o]=(e/d>>0)-c&255;return t+l},Ml.prototype.writeInt8=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,1,127,-128),Ml.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Ml.prototype.writeInt16LE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,2,32767,-32768),Ml.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):gi(this,e,t,!0),t+2},Ml.prototype.writeInt16BE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,2,32767,-32768),Ml.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):gi(this,e,t,!1),t+2},Ml.prototype.writeInt32LE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,4,2147483647,-2147483648),Ml.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):Xi(this,e,t,!0),t+4},Ml.prototype.writeInt32BE=function(e,t,l){return e=+e,t|=0,l||pi(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Ml.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Xi(this,e,t,!1),t+4},Ml.prototype.writeFloatLE=function(e,t,l){return Vi(this,e,t,!0,l)},Ml.prototype.writeFloatBE=function(e,t,l){return Vi(this,e,t,!1,l)},Ml.prototype.writeDoubleLE=function(e,t,l){return Wi(this,e,t,!0,l)},Ml.prototype.writeDoubleBE=function(e,t,l){return Wi(this,e,t,!1,l)},Ml.prototype.copy=function(e,t,l,i){if(l||(l=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<l&&(i=l),i===l)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(l<0||l>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-l&&(i=e.length-t+l);var n,o=i-l;if(this===e&&l<t&&t<i)for(n=o-1;n>=0;--n)e[n+t]=this[n+l];else if(o<1e3||!Ml.TYPED_ARRAY_SUPPORT)for(n=0;n<o;++n)e[n+t]=this[n+l];else Uint8Array.prototype.set.call(e,this.subarray(l,l+o),t);return o},Ml.prototype.fill=function(e,t,l,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,l=this.length):"string"==typeof l&&(i=l,l=this.length),1===e.length){var n=e.charCodeAt(0);n<256&&(e=n)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!Ml.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<l)throw new RangeError("Out of range index");if(l<=t)return this;var o;if(t>>>=0,l=void 0===l?this.length:l>>>0,e||(e=0),"number"==typeof e)for(o=t;o<l;++o)this[o]=e;else{var d=ql(e)?e:Si(new Ml(e,i).toString()),c=d.length;for(o=0;o<l-t;++o)this[o+t]=d[o%c]}return this};var Ci=/[^+\/0-9A-Za-z-_]/g;function Ri(e){return e<16?"0"+e.toString(16):e.toString(16)}function Si(e,t){var l;t=t||1/0;for(var i=e.length,n=null,o=[],d=0;d<i;++d){if((l=e.charCodeAt(d))>55295&&l<57344){if(!n){if(l>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(d+1===i){(t-=3)>-1&&o.push(239,191,189);continue}n=l;continue}if(l<56320){(t-=3)>-1&&o.push(239,191,189),n=l;continue}l=65536+(n-55296<<10|l-56320)}else n&&(t-=3)>-1&&o.push(239,191,189);if(n=null,l<128){if((t-=1)<0)break;o.push(l)}else if(l<2048){if((t-=2)<0)break;o.push(l>>6|192,63&l|128)}else if(l<65536){if((t-=3)<0)break;o.push(l>>12|224,l>>6&63|128,63&l|128)}else{if(!(l<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(l>>18|240,l>>12&63|128,l>>6&63|128,63&l|128)}}return o}function Yi(e){return function(e){var t,l,i,n,o,d;fl||Ul();var c=e.length;if(c%4>0)throw new Error("Invalid string. Length must be a multiple of 4");o="="===e[c-2]?2:"="===e[c-1]?1:0,d=new Ll(3*c/4-o),i=o>0?c-4:c;var a=0;for(t=0,l=0;t<i;t+=4,l+=3)n=kl[e.charCodeAt(t)]<<18|kl[e.charCodeAt(t+1)]<<12|kl[e.charCodeAt(t+2)]<<6|kl[e.charCodeAt(t+3)],d[a++]=n>>16&255,d[a++]=n>>8&255,d[a++]=255&n;return 2===o?(n=kl[e.charCodeAt(t)]<<2|kl[e.charCodeAt(t+1)]>>4,d[a++]=255&n):1===o&&(n=kl[e.charCodeAt(t)]<<10|kl[e.charCodeAt(t+1)]<<4|kl[e.charCodeAt(t+2)]>>2,d[a++]=n>>8&255,d[a++]=255&n),d}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(Ci,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function vi(e,t,l,i){for(var n=0;n<i&&!(n+l>=t.length||n>=e.length);++n)t[n+l]=e[n];return n}function Ki(e){return null!=e&&(!!e._isBuffer||Ni(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&Ni(e.slice(0,0))}(e))}function Ni(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var Ji=Object.freeze({__proto__:null,Buffer:Ml,INSPECT_MAX_BYTES:50,SlowBuffer:function(e){return+e!=e&&(e=0),Ml.alloc(+e)},isBuffer:Ki,kMaxLength:wl}),Hi={exports:{}},ki={},Li={};Object.defineProperty(Li,"__esModule",{value:!0}),Li.default=function(e){var t=e.length,l=t%4;if(!l)return e;var i=t,n=4-l,o=t+n,d=Ml.alloc(o);for(d.write(e);n--;)d.write("=",i++);return d.toString()},Object.defineProperty(ki,"__esModule",{value:!0});var fi=Li;function Ui(e,t){return void 0===t&&(t="utf8"),Ml.isBuffer(e)?Bi(e.toString("base64")):Bi(Ml.from(e,t).toString("base64"))}function Ti(e){return e=e.toString(),fi.default(e).replace(/\-/g,"+").replace(/_/g,"/")}function Bi(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}var Fi=Ui;Fi.encode=Ui,Fi.decode=function(e,t){return void 0===t&&(t="utf8"),Ml.from(Ti(e),"base64").toString(t)},Fi.toBase64=Ti,Fi.fromBase64=Bi,Fi.toBuffer=function(e){return Ml.from(Ti(e),"base64")},ki.default=Fi,function(e){e.exports=ki.default,e.exports.default=e.exports}(Hi);var Ai=Hi.exports,zi={exports:{}};!function(e){!function(t,l){var i={};!function(e){e.__esModule=!0,e.digestLength=32,e.blockSize=64;var t=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function l(e,l,i,n,o){for(var d,c,a,s,Z,r,u,b,h,m,I,G,p;o>=64;){for(d=l[0],c=l[1],a=l[2],s=l[3],Z=l[4],r=l[5],u=l[6],b=l[7],m=0;m<16;m++)I=n+4*m,e[m]=(255&i[I])<<24|(255&i[I+1])<<16|(255&i[I+2])<<8|255&i[I+3];for(m=16;m<64;m++)G=((h=e[m-2])>>>17|h<<15)^(h>>>19|h<<13)^h>>>10,p=((h=e[m-15])>>>7|h<<25)^(h>>>18|h<<14)^h>>>3,e[m]=(G+e[m-7]|0)+(p+e[m-16]|0);for(m=0;m<64;m++)G=(((Z>>>6|Z<<26)^(Z>>>11|Z<<21)^(Z>>>25|Z<<7))+(Z&r^~Z&u)|0)+(b+(t[m]+e[m]|0)|0)|0,p=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&c^d&a^c&a)|0,b=u,u=r,r=Z,Z=s+G|0,s=a,a=c,c=d,d=G+p|0;l[0]+=d,l[1]+=c,l[2]+=a,l[3]+=s,l[4]+=Z,l[5]+=r,l[6]+=u,l[7]+=b,n+=64,o-=64}return n}var i=function(){function t(){this.digestLength=e.digestLength,this.blockSize=e.blockSize,this.state=new Int32Array(8),this.temp=new Int32Array(64),this.buffer=new Uint8Array(128),this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this.reset()}return t.prototype.reset=function(){return this.state[0]=1779033703,this.state[1]=3144134277,this.state[2]=1013904242,this.state[3]=2773480762,this.state[4]=1359893119,this.state[5]=2600822924,this.state[6]=528734635,this.state[7]=1541459225,this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this},t.prototype.clean=function(){for(var e=0;e<this.buffer.length;e++)this.buffer[e]=0;for(e=0;e<this.temp.length;e++)this.temp[e]=0;this.reset()},t.prototype.update=function(e,t){if(void 0===t&&(t=e.length),this.finished)throw new Error("SHA256: can't update because hash was finished.");var i=0;if(this.bytesHashed+=t,this.bufferLength>0){for(;this.bufferLength<64&&t>0;)this.buffer[this.bufferLength++]=e[i++],t--;64===this.bufferLength&&(l(this.temp,this.state,this.buffer,0,64),this.bufferLength=0)}for(t>=64&&(i=l(this.temp,this.state,e,i,t),t%=64);t>0;)this.buffer[this.bufferLength++]=e[i++],t--;return this},t.prototype.finish=function(e){if(!this.finished){var t=this.bytesHashed,i=this.bufferLength,n=t/536870912|0,o=t<<3,d=t%64<56?64:128;this.buffer[i]=128;for(var c=i+1;c<d-8;c++)this.buffer[c]=0;this.buffer[d-8]=n>>>24&255,this.buffer[d-7]=n>>>16&255,this.buffer[d-6]=n>>>8&255,this.buffer[d-5]=n>>>0&255,this.buffer[d-4]=o>>>24&255,this.buffer[d-3]=o>>>16&255,this.buffer[d-2]=o>>>8&255,this.buffer[d-1]=o>>>0&255,l(this.temp,this.state,this.buffer,0,d),this.finished=!0}for(c=0;c<8;c++)e[4*c+0]=this.state[c]>>>24&255,e[4*c+1]=this.state[c]>>>16&255,e[4*c+2]=this.state[c]>>>8&255,e[4*c+3]=this.state[c]>>>0&255;return this},t.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},t.prototype._saveState=function(e){for(var t=0;t<this.state.length;t++)e[t]=this.state[t]},t.prototype._restoreState=function(e,t){for(var l=0;l<this.state.length;l++)this.state[l]=e[l];this.bytesHashed=t,this.finished=!1,this.bufferLength=0},t}();e.Hash=i;var n=function(){function e(e){this.inner=new i,this.outer=new i,this.blockSize=this.inner.blockSize,this.digestLength=this.inner.digestLength;var t=new Uint8Array(this.blockSize);if(e.length>this.blockSize)(new i).update(e).finish(t).clean();else for(var l=0;l<e.length;l++)t[l]=e[l];for(l=0;l<t.length;l++)t[l]^=54;this.inner.update(t);for(l=0;l<t.length;l++)t[l]^=106;this.outer.update(t),this.istate=new Uint32Array(8),this.ostate=new Uint32Array(8),this.inner._saveState(this.istate),this.outer._saveState(this.ostate);for(l=0;l<t.length;l++)t[l]=0}return e.prototype.reset=function(){return this.inner._restoreState(this.istate,this.inner.blockSize),this.outer._restoreState(this.ostate,this.outer.blockSize),this},e.prototype.clean=function(){for(var e=0;e<this.istate.length;e++)this.ostate[e]=this.istate[e]=0;this.inner.clean(),this.outer.clean()},e.prototype.update=function(e){return this.inner.update(e),this},e.prototype.finish=function(e){return this.outer.finished?this.outer.finish(e):(this.inner.finish(e),this.outer.update(e,this.digestLength).finish(e)),this},e.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},e}();function o(e){var t=(new i).update(e),l=t.digest();return t.clean(),l}function d(e,t){var l=new n(e).update(t),i=l.digest();return l.clean(),i}function c(e,t,l,i){var n=i[0];if(0===n)throw new Error("hkdf: cannot expand more");t.reset(),n>1&&t.update(e),l&&t.update(l),t.update(i),t.finish(e),i[0]++}e.HMAC=n,e.hash=o,e.default=o,e.hmac=d;var a=new Uint8Array(e.digestLength);function s(e,t,l,i){void 0===t&&(t=a),void 0===i&&(i=32);for(var o=new Uint8Array([1]),s=d(t,e),Z=new n(s),r=new Uint8Array(Z.digestLength),u=r.length,b=new Uint8Array(i),h=0;h<i;h++)u===r.length&&(c(r,Z,l,o),u=0),b[h]=r[u++];return Z.clean(),r.fill(0),o.fill(0),b}function Z(e,t,l,i){for(var o=new n(e),d=o.digestLength,c=new Uint8Array(4),a=new Uint8Array(d),s=new Uint8Array(d),Z=new Uint8Array(i),r=0;r*d<i;r++){var u=r+1;c[0]=u>>>24&255,c[1]=u>>>16&255,c[2]=u>>>8&255,c[3]=u>>>0&255,o.reset(),o.update(t),o.update(c),o.finish(s);for(var b=0;b<d;b++)a[b]=s[b];for(b=2;b<=l;b++){o.reset(),o.update(s).finish(s);for(var h=0;h<d;h++)a[h]^=s[h]}for(b=0;b<d&&r*d+b<i;b++)Z[r*d+b]=a[b]}for(r=0;r<d;r++)a[r]=s[r]=0;for(r=0;r<4;r++)c[r]=0;return o.clean(),Z}e.hkdf=s,e.pbkdf2=Z}(i);var n=i.default;for(var o in i)n[o]=i[o];e.exports=n}()}(zi);var xi=ge(zi.exports),wi=crypto;const Pi=e=>e instanceof CryptoKey,Qi=new TextEncoder,Mi=new TextDecoder;const ji=e=>{let t=e;t instanceof Uint8Array&&(t=Mi.decode(t)),t=t.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return(e=>{const t=atob(e),l=new Uint8Array(t.length);for(let e=0;e<t.length;e++)l[e]=t.charCodeAt(e);return l})(t)}catch(e){throw new TypeError("The input to be decoded is not correctly encoded.")}};class Ei extends Error{constructor(e){var t;super(e),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,null===(t=Error.captureStackTrace)||void 0===t||t.call(Error,this,this.constructor)}static get code(){return"ERR_JOSE_GENERIC"}}class Di extends Ei{constructor(e,t="unspecified",l="unspecified"){super(e),this.code="ERR_JWT_CLAIM_VALIDATION_FAILED",this.claim=t,this.reason=l}static get code(){return"ERR_JWT_CLAIM_VALIDATION_FAILED"}}class Oi extends Ei{constructor(e,t="unspecified",l="unspecified"){super(e),this.code="ERR_JWT_EXPIRED",this.claim=t,this.reason=l}static get code(){return"ERR_JWT_EXPIRED"}}class _i extends Ei{constructor(){super(...arguments),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}static get code(){return"ERR_JOSE_ALG_NOT_ALLOWED"}}class qi extends Ei{constructor(){super(...arguments),this.code="ERR_JOSE_NOT_SUPPORTED"}static get code(){return"ERR_JOSE_NOT_SUPPORTED"}}class $i extends Ei{constructor(){super(...arguments),this.code="ERR_JWS_INVALID"}static get code(){return"ERR_JWS_INVALID"}}class en extends Ei{constructor(){super(...arguments),this.code="ERR_JWT_INVALID"}static get code(){return"ERR_JWT_INVALID"}}class tn extends Ei{constructor(){super(...arguments),this.code="ERR_JWKS_INVALID"}static get code(){return"ERR_JWKS_INVALID"}}class ln extends Ei{constructor(){super(...arguments),this.code="ERR_JWKS_NO_MATCHING_KEY",this.message="no applicable key found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_NO_MATCHING_KEY"}}class nn extends Ei{constructor(){super(...arguments),this.code="ERR_JWKS_MULTIPLE_MATCHING_KEYS",this.message="multiple matching keys found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_MULTIPLE_MATCHING_KEYS"}}class on extends Ei{constructor(){super(...arguments),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED",this.message="signature verification failed"}static get code(){return"ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}}function dn(){return"function"==typeof WebSocketPair}function cn(e,t="algorithm.name"){return new TypeError(`CryptoKey does not support this operation, its ${t} must be ${e}`)}function an(e,t){return e.name===t}function sn(e){return parseInt(e.name.slice(4),10)}function Zn(e,t,...l){switch(t){case"HS256":case"HS384":case"HS512":{if(!an(e.algorithm,"HMAC"))throw cn("HMAC");const l=parseInt(t.slice(2),10);if(sn(e.algorithm.hash)!==l)throw cn(`SHA-${l}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!an(e.algorithm,"RSASSA-PKCS1-v1_5"))throw cn("RSASSA-PKCS1-v1_5");const l=parseInt(t.slice(2),10);if(sn(e.algorithm.hash)!==l)throw cn(`SHA-${l}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!an(e.algorithm,"RSA-PSS"))throw cn("RSA-PSS");const l=parseInt(t.slice(2),10);if(sn(e.algorithm.hash)!==l)throw cn(`SHA-${l}`,"algorithm.hash");break}case dn()&&"EdDSA":if(!an(e.algorithm,"NODE-ED25519"))throw cn("NODE-ED25519");break;case"ES256":case"ES384":case"ES512":{if(!an(e.algorithm,"ECDSA"))throw cn("ECDSA");const l=function(e){switch(e){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw new Error("unreachable")}}(t);if(e.algorithm.namedCurve!==l)throw cn(l,"algorithm.namedCurve");break}default:throw new TypeError("CryptoKey does not support this operation")}!function(e,t){if(t.length&&!t.some((t=>e.usages.includes(t)))){let e="CryptoKey does not support this operation, its usages must include ";if(t.length>2){const l=t.pop();e+=`one of ${t.join(", ")}, or ${l}.`}else 2===t.length?e+=`one of ${t[0]} or ${t[1]}.`:e+=`${t[0]}.`;throw new TypeError(e)}}(e,l)}var rn=(e,...t)=>{let l="Key must be ";if(t.length>2){const e=t.pop();l+=`one of type ${t.join(", ")}, or ${e}.`}else 2===t.length?l+=`one of type ${t[0]} or ${t[1]}.`:l+=`of type ${t[0]}.`;return null==e?l+=` Received ${e}`:"function"==typeof e&&e.name?l+=` Received function ${e.name}`:"object"==typeof e&&null!=e&&e.constructor&&e.constructor.name&&(l+=` Received an instance of ${e.constructor.name}`),l},un=e=>Pi(e);const bn=["CryptoKey"];function hn(e){if("object"!=typeof(t=e)||null===t||"[object Object]"!==Object.prototype.toString.call(e))return!1;var t;if(null===Object.getPrototypeOf(e))return!0;let l=e;for(;null!==Object.getPrototypeOf(l);)l=Object.getPrototypeOf(l);return Object.getPrototypeOf(e)===l}const mn=async e=>{var t,l;const{algorithm:i,keyUsages:n}=function(e){let t,l;switch(e.kty){case"oct":switch(e.alg){case"HS256":case"HS384":case"HS512":t={name:"HMAC",hash:`SHA-${e.alg.slice(-3)}`},l=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":throw new qi(`${e.alg} keys cannot be imported as CryptoKey instances`);case"A128GCM":case"A192GCM":case"A256GCM":case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":t={name:"AES-GCM"},l=["encrypt","decrypt"];break;case"A128KW":case"A192KW":case"A256KW":t={name:"AES-KW"},l=["wrapKey","unwrapKey"];break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":t={name:"PBKDF2"},l=["deriveBits"];break;default:throw new qi('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"RSA":switch(e.alg){case"PS256":case"PS384":case"PS512":t={name:"RSA-PSS",hash:`SHA-${e.alg.slice(-3)}`},l=e.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":t={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${e.alg.slice(-3)}`},l=e.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":t={name:"RSA-OAEP",hash:`SHA-${parseInt(e.alg.slice(-3),10)||1}`},l=e.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new qi('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"EC":switch(e.alg){case"ES256":t={name:"ECDSA",namedCurve:"P-256"},l=e.d?["sign"]:["verify"];break;case"ES384":t={name:"ECDSA",namedCurve:"P-384"},l=e.d?["sign"]:["verify"];break;case"ES512":t={name:"ECDSA",namedCurve:"P-521"},l=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:"ECDH",namedCurve:e.crv},l=e.d?["deriveBits"]:[];break;default:throw new qi('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case dn()&&"OKP":if("EdDSA"!==e.alg)throw new qi('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');if("Ed25519"!==e.crv)throw new qi('Invalid or unsupported JWK "crv" (Subtype of Key Pair) Parameter value');t={name:"NODE-ED25519",namedCurve:"NODE-ED25519"},l=e.d?["sign"]:["verify"];break;default:throw new qi('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:t,keyUsages:l}}(e),o=[i,null!==(t=e.ext)&&void 0!==t&&t,null!==(l=e.key_ops)&&void 0!==l?l:n];if("PBKDF2"===i.name)return wi.subtle.importKey("raw",ji(e.k),...o);const d={...e};return delete d.alg,wi.subtle.importKey("jwk",d,...o)};const In=(e,t,l)=>{e.startsWith("HS")||"dir"===e||e.startsWith("PBES2")||/^A\d{3}(?:GCM)?KW$/.test(e)?(e=>{if(!(e instanceof Uint8Array)){if(!un(e))throw new TypeError(rn(e,...bn,"Uint8Array"));if("secret"!==e.type)throw new TypeError(`${bn.join(" or ")} instances for symmetric algorithms must be of type "secret"`)}})(t):((e,t)=>{if(!un(e))throw new TypeError(rn(e,...bn));if("secret"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);if("sign"===t&&"public"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);if("decrypt"===t&&"public"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);if(e.algorithm&&"verify"===t&&"private"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);if(e.algorithm&&"encrypt"===t&&"private"===e.type)throw new TypeError(`${bn.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`)})(t,l)};const Gn=async(e,t,l,i)=>{const n=await function(e,t,l){if(Pi(t))return Zn(t,e,l),t;if(t instanceof Uint8Array){if(!e.startsWith("HS"))throw new TypeError(rn(t,...bn));return wi.subtle.importKey("raw",t,{hash:`SHA-${e.slice(-3)}`,name:"HMAC"},!1,[l])}throw new TypeError(rn(t,...bn,"Uint8Array"))}(e,t,"verify");((e,t)=>{if(e.startsWith("RS")||e.startsWith("PS")){const{modulusLength:l}=t.algorithm;if("number"!=typeof l||l<2048)throw new TypeError(`${e} requires key modulusLength to be 2048 bits or larger`)}})(e,n);const o=function(e,t){const l=`SHA-${e.slice(-3)}`;switch(e){case"HS256":case"HS384":case"HS512":return{hash:l,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:l,name:"RSA-PSS",saltLength:e.slice(-3)>>3};case"RS256":case"RS384":case"RS512":return{hash:l,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:l,name:"ECDSA",namedCurve:t.namedCurve};case dn()&&"EdDSA":const{namedCurve:i}=t;return{name:i,namedCurve:i};default:throw new qi(`alg ${e} is not supported either by JOSE or your javascript runtime`)}}(e,n.algorithm);try{return await wi.subtle.verify(o,n,l,i)}catch(e){return!1}};async function pn(e,t,l){var i;if(!hn(e))throw new $i("Flattened JWS must be an object");if(void 0===e.protected&&void 0===e.header)throw new $i('Flattened JWS must have either of the "protected" or "header" members');if(void 0!==e.protected&&"string"!=typeof e.protected)throw new $i("JWS Protected Header incorrect type");if(void 0===e.payload)throw new $i("JWS Payload missing");if("string"!=typeof e.signature)throw new $i("JWS Signature missing or incorrect type");if(void 0!==e.header&&!hn(e.header))throw new $i("JWS Unprotected Header incorrect type");let n={};if(e.protected){const t=ji(e.protected);try{n=JSON.parse(Mi.decode(t))}catch(e){throw new $i("JWS Protected Header is invalid")}}if(!((...e)=>{const t=e.filter(Boolean);if(0===t.length||1===t.length)return!0;let l;for(const e of t){const t=Object.keys(e);if(l&&0!==l.size)for(const e of t){if(l.has(e))return!1;l.add(e)}else l=new Set(t)}return!0})(n,e.header))throw new $i("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const o={...n,...e.header},d=function(e,t,l,i,n){if(void 0!==n.crit&&void 0===i.crit)throw new e('"crit" (Critical) Header Parameter MUST be integrity protected');if(!i||void 0===i.crit)return new Set;if(!Array.isArray(i.crit)||0===i.crit.length||i.crit.some((e=>"string"!=typeof e||0===e.length)))throw new e('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');let o;o=void 0!==l?new Map([...Object.entries(l),...t.entries()]):t;for(const t of i.crit){if(!o.has(t))throw new qi(`Extension Header Parameter "${t}" is not recognized`);if(void 0===n[t])throw new e(`Extension Header Parameter "${t}" is missing`);if(o.get(t)&&void 0===i[t])throw new e(`Extension Header Parameter "${t}" MUST be integrity protected`)}return new Set(i.crit)}($i,new Map([["b64",!0]]),null==l?void 0:l.crit,n,o);let c=!0;if(d.has("b64")&&(c=n.b64,"boolean"!=typeof c))throw new $i('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:a}=o;if("string"!=typeof a||!a)throw new $i('JWS "alg" (Algorithm) Header Parameter missing or invalid');const s=l&&((e,t)=>{if(void 0!==t&&(!Array.isArray(t)||t.some((e=>"string"!=typeof e))))throw new TypeError(`"${e}" option must be an array of strings`);if(t)return new Set(t)})("algorithms",l.algorithms);if(s&&!s.has(a))throw new _i('"alg" (Algorithm) Header Parameter not allowed');if(c){if("string"!=typeof e.payload)throw new $i("JWS Payload must be a string")}else if("string"!=typeof e.payload&&!(e.payload instanceof Uint8Array))throw new $i("JWS Payload must be a string or an Uint8Array instance");let Z=!1;"function"==typeof t&&(t=await t(n,e),Z=!0),In(a,t,"verify");const r=function(...e){const t=e.reduce(((e,{length:t})=>e+t),0),l=new Uint8Array(t);let i=0;return e.forEach((e=>{l.set(e,i),i+=e.length})),l}(Qi.encode(null!==(i=e.protected)&&void 0!==i?i:""),Qi.encode("."),"string"==typeof e.payload?Qi.encode(e.payload):e.payload),u=ji(e.signature);if(!await Gn(a,t,u,r))throw new on;let b;b=c?ji(e.payload):"string"==typeof e.payload?Qi.encode(e.payload):e.payload;const h={payload:b};return void 0!==e.protected&&(h.protectedHeader=n),void 0!==e.header&&(h.unprotectedHeader=e.header),Z?{...h,key:t}:h}const gn=86400,Xn=/^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;var yn=e=>{const t=Xn.exec(e);if(!t)throw new TypeError("Invalid time period format");const l=parseFloat(t[1]);switch(t[2].toLowerCase()){case"sec":case"secs":case"second":case"seconds":case"s":return Math.round(l);case"minute":case"minutes":case"min":case"mins":case"m":return Math.round(60*l);case"hour":case"hours":case"hr":case"hrs":case"h":return Math.round(3600*l);case"day":case"days":case"d":return Math.round(l*gn);case"week":case"weeks":case"w":return Math.round(604800*l);default:return Math.round(31557600*l)}};const Vn=e=>e.toLowerCase().replace(/^application\//,"");var Wn=(e,t,l={})=>{const{typ:i}=l;if(i&&("string"!=typeof e.typ||Vn(e.typ)!==Vn(i)))throw new Di('unexpected "typ" JWT header value',"typ","check_failed");let n;try{n=JSON.parse(Mi.decode(t))}catch(e){}if(!hn(n))throw new en("JWT Claims Set must be a top-level JSON object");const{issuer:o}=l;if(o&&!(Array.isArray(o)?o:[o]).includes(n.iss))throw new Di('unexpected "iss" claim value',"iss","check_failed");const{subject:d}=l;if(d&&n.sub!==d)throw new Di('unexpected "sub" claim value',"sub","check_failed");const{audience:c}=l;if(c&&(a=n.aud,s="string"==typeof c?[c]:c,!("string"==typeof a?s.includes(a):Array.isArray(a)&&s.some(Set.prototype.has.bind(new Set(a))))))throw new Di('unexpected "aud" claim value',"aud","check_failed");var a,s;let Z;switch(typeof l.clockTolerance){case"string":Z=yn(l.clockTolerance);break;case"number":Z=l.clockTolerance;break;case"undefined":Z=0;break;default:throw new TypeError("Invalid clockTolerance option type")}const{currentDate:r}=l,u=(b=r||new Date,Math.floor(b.getTime()/1e3));var b;if((void 0!==n.iat||l.maxTokenAge)&&"number"!=typeof n.iat)throw new Di('"iat" claim must be a number',"iat","invalid");if(void 0!==n.nbf){if("number"!=typeof n.nbf)throw new Di('"nbf" claim must be a number',"nbf","invalid");if(n.nbf>u+Z)throw new Di('"nbf" claim timestamp check failed',"nbf","check_failed")}if(void 0!==n.exp){if("number"!=typeof n.exp)throw new Di('"exp" claim must be a number',"exp","invalid");if(n.exp<=u-Z)throw new Oi('"exp" claim timestamp check failed',"exp","check_failed")}if(l.maxTokenAge){const e=u-n.iat;if(e-Z>("number"==typeof l.maxTokenAge?l.maxTokenAge:yn(l.maxTokenAge)))throw new Oi('"iat" claim timestamp check failed (too far in the past)',"iat","check_failed");if(e<0-Z)throw new Di('"iat" claim timestamp check failed (it should be in the past)',"iat","check_failed")}return n};async function Cn(e,t,l){var i;const n=await async function(e,t,l){if(e instanceof Uint8Array&&(e=Mi.decode(e)),"string"!=typeof e)throw new $i("Compact JWS must be a string or Uint8Array");const{0:i,1:n,2:o,length:d}=e.split(".");if(3!==d)throw new $i("Invalid Compact JWS");const c=await pn({payload:n,protected:i,signature:o},t,l),a={payload:c.payload,protectedHeader:c.protectedHeader};return"function"==typeof t?{...a,key:c.key}:a}(e,t,l);if((null===(i=n.protectedHeader.crit)||void 0===i?void 0:i.includes("b64"))&&!1===n.protectedHeader.b64)throw new en("JWTs MUST NOT use unencoded payload");const o={payload:Wn(n.protectedHeader,n.payload,l),protectedHeader:n.protectedHeader};return"function"==typeof t?{...o,key:n.key}:o}function Rn(e){return hn(e)}class Sn{constructor(e){if(this._cached=new WeakMap,!function(e){return e&&"object"==typeof e&&Array.isArray(e.keys)&&e.keys.every(Rn)}(e))throw new tn("JSON Web Key Set malformed");var t;this._jwks=(t=e,"function"==typeof structuredClone?structuredClone(t):JSON.parse(JSON.stringify(t)))}async getKey(e,t){const{alg:l,kid:i}={...e,...t.header},n=function(e){switch("string"==typeof e&&e.slice(0,2)){case"RS":case"PS":return"RSA";case"ES":return"EC";case"Ed":return"OKP";default:throw new qi('Unsupported "alg" value for a JSON Web Key Set')}}(l),o=this._jwks.keys.filter((e=>{let t=n===e.kty;if(t&&"string"==typeof i&&(t=i===e.kid),t&&"string"==typeof e.alg&&(t=l===e.alg),t&&"string"==typeof e.use&&(t="sig"===e.use),t&&Array.isArray(e.key_ops)&&(t=e.key_ops.includes("verify")),t&&"EdDSA"===l&&(t="Ed25519"===e.crv||"Ed448"===e.crv),t)switch(l){case"ES256":t="P-256"===e.crv;break;case"ES256K":t="secp256k1"===e.crv;break;case"ES384":t="P-384"===e.crv;break;case"ES512":t="P-521"===e.crv}return t})),{0:d,length:c}=o;if(0===c)throw new ln;if(1!==c)throw new nn;const a=this._cached.get(d)||this._cached.set(d,{}).get(d);if(void 0===a[l]){const e=await async function(e,t,l){if(!hn(e))throw new TypeError("JWK must be an object");if(t||(t=e.alg),"string"!=typeof t||!t)throw new TypeError('"alg" argument is required when "jwk.alg" is not present');switch(e.kty){case"oct":if("string"!=typeof e.k||!e.k)throw new TypeError('missing "k" (Key Value) Parameter value');return null!=l||(l=!0!==e.ext),l?mn({...e,alg:t,ext:!1}):ji(e.k);case"RSA":if(void 0!==e.oth)throw new qi('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');case"EC":case"OKP":return mn({...e,alg:t});default:throw new qi('Unsupported "kty" (Key Type) Parameter value')}}({...d,ext:!0},l);if(e instanceof Uint8Array||"public"!==e.type)throw new tn("JSON Web Key Set members must be public keys");a[l]=e}return a[l]}}var Yn={exports:{}},vn={exports:{}},Kn=Xe(Ji);
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
!function(e,t){var l=Kn,i=l.Buffer;function n(e,t){for(var l in e)t[l]=e[l]}function o(e,t,l){return i(e,t,l)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=l:(n(l,t),t.Buffer=o),o.prototype=Object.create(i.prototype),n(i,o),o.from=function(e,t,l){if("number"==typeof e)throw new TypeError("Argument must not be a number");return i(e,t,l)},o.alloc=function(e,t,l){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=i(e);return void 0!==t?"string"==typeof l?n.fill(t,l):n.fill(t):n.fill(0),n},o.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i(e)},o.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return l.SlowBuffer(e)}}(vn,vn.exports);var Nn=65536,Jn=4294967295;var Hn=vn.exports.Buffer,kn=pe.crypto||pe.msCrypto;kn&&kn.getRandomValues?Yn.exports=function(e,t){if(e>Jn)throw new RangeError("requested too many random bytes");var l=Hn.allocUnsafe(e);if(e>0)if(e>Nn)for(var i=0;i<e;i+=Nn)kn.getRandomValues(l.slice(i,i+Nn));else kn.getRandomValues(l);if("function"==typeof t)return Zt.nextTick((function(){t(null,l)}));return l}:Yn.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")};var Ln=Yn.exports;class fn{base64URLEncode(e){return Ai.encode(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}base64URLDecode(e){return Ai.decode(e).toString()}hashSha256(e){return Ml.from(xi((new TextEncoder).encode(e)))}generateRandomBytes(e){return Ln(e)}verifyJwt(e,t,l,i,n,o,d,c){const a={algorithms:l,audience:i,clockTolerance:d,subject:o};return(null==c||c)&&(a.issuer=n),Cn(e,(s={keys:[t]},Sn.prototype.getKey.bind(new Sn(s))),a).then((()=>Promise.resolve(!0))).catch((e=>{var t;return Promise.reject(new r("SPA-CRYPTO-UTILS-VJ-IV01",null!==(t=null==e?void 0:e.reason)&&void 0!==t?t:JSON.stringify(e),`${null==e?void 0:e.code} ${null==e?void 0:e.claim}`))}));var s}}const Un=(l,i,n)=>t(void 0,void 0,void 0,(function*(){var c;const a=(t=>{switch(t){case e.Storage.LocalStorage:return new Kl;case e.Storage.SessionStorage:return new Jl;case e.Storage.BrowserMemory:return new Nl;default:return new Jl}})(i.storage),Z=new fn,r=new p;yield r.initialize(i,a,Z,l);const b=new Ie(r),h=r.getDataLayer(),m=yield Ge((()=>t(void 0,void 0,void 0,(function*(){return r.getSignOutURL()}))),null!==(c=i.storage)&&void 0!==c?c:e.Storage.SessionStorage,(e=>h.setSessionDataParameter(d,null!=e?e:""))),I=n(r,b);let G=!1;const g=vl.getInstance();let X,y,V=!0;(null==g?void 0:g.init)&&(yield g.init(!0,(e=>t(void 0,void 0,void 0,(function*(){yield I.attachTokenToRequestConfig(e)})))));const W=()=>t(void 0,void 0,void 0,(function*(){const e=yield r.getOIDCServiceEndpoints(),l=yield h.getConfigData();I.initializeSessionManger(l,e,(()=>t(void 0,void 0,void 0,(function*(){return(yield r.getBasicUserInfo()).sessionState}))),(e=>t(void 0,void 0,void 0,(function*(){return r.getAuthorizationURL(e)}))),m)})),C=()=>t(void 0,void 0,void 0,(function*(){return yield m.receivePromptNoneResponse((e=>t(void 0,void 0,void 0,(function*(){yield h.setSessionDataParameter(d,null!=e?e:"")}))))})),R=e=>{e.preventSignOutURLUpdate&&(G=!0)},S=(e,l,i)=>t(void 0,void 0,void 0,(function*(){return yield I.requestAccessToken(e,l,W,void 0,i)})),Y=()=>t(void 0,void 0,void 0,(function*(){const t=yield h.getConfigData(),l=yield r.getAuthorizationURL({prompt:"none",state:oe}),i=new URL(l);i.searchParams.set("response_mode","query");const n=i.toString();if(t.storage===e.Storage.BrowserMemory&&t.enablePKCE){const e=i.searchParams.get(s);he.setPKCE(u.extractPKCEKeyFromStateParam(null!=e?e:""),yield r.getPKCECode(null!=e?e:""))}return n}));return{disableHttpHandler:()=>(I.disableHttpHandler(g),V=!1,!0),enableHttpHandler:()=>(I.enableHttpHandler(g),V=!0,!0),getAccessToken:()=>t(void 0,void 0,void 0,(function*(){return I.getAccessToken()})),getBasicUserInfo:()=>t(void 0,void 0,void 0,(function*(){return I.getBasicUserInfo()})),getCryptoHelper:()=>t(void 0,void 0,void 0,(function*(){return I.getCryptoHelper()})),getDataLayer:()=>t(void 0,void 0,void 0,(function*(){return I.getDataLayer()})),getDecodedIDToken:()=>t(void 0,void 0,void 0,(function*(){return I.getDecodedIDToken()})),getHttpClient:()=>g,getIDToken:()=>t(void 0,void 0,void 0,(function*(){return I.getIDToken()})),getOIDCServiceEndpoints:()=>t(void 0,void 0,void 0,(function*(){return I.getOIDCServiceEndpoints()})),httpRequest:e=>t(void 0,void 0,void 0,(function*(){return yield I.httpRequest(g,e,V,X,y)})),httpRequestAll:e=>t(void 0,void 0,void 0,(function*(){return yield I.httpRequestAll(e,g,V,X,y)})),isAuthenticated:()=>t(void 0,void 0,void 0,(function*(){return I.isAuthenticated()})),isSessionActive:()=>t(void 0,void 0,void 0,(function*(){return"true"===(yield h.getSessionStatus())})),refreshAccessToken:()=>t(void 0,void 0,void 0,(function*(){try{return yield I.refreshAccessToken(R)}catch(e){return Promise.reject(e)}})),requestCustomGrant:e=>t(void 0,void 0,void 0,(function*(){return yield I.requestCustomGrant(e,R)})),revokeAccessToken:()=>t(void 0,void 0,void 0,(function*(){const e=yield b.getRefreshTimeoutTimer();return r.revokeAccessToken().then((()=>(m.reset(),b.clearRefreshTokenTimeout(e),Promise.resolve(!0)))).catch((e=>Promise.reject(e)))})),setHttpRequestErrorCallback:e=>{X=e},setHttpRequestFinishCallback:e=>{(null==g?void 0:g.setHttpRequestFinishCallback)&&g.setHttpRequestFinishCallback(e)},setHttpRequestStartCallback:e=>{(null==g?void 0:g.setHttpRequestStartCallback)&&g.setHttpRequestStartCallback(e)},setHttpRequestSuccessCallback:e=>{(null==g?void 0:g.setHttpRequestSuccessCallback)&&g.setHttpRequestSuccessCallback(e)},signIn:(l,n,c,a)=>t(void 0,void 0,void 0,(function*(){var Z,b,m;const G=yield I.handleSignIn(C,W);if(G)return G;{let I,G,g;return(null==i?void 0:i.responseMode)===e.ResponseMode.formPost&&n?(I=n,G=null!=c?c:"",g=null!=a?a:""):(I=null!==(Z=new URL(window.location.href).searchParams.get(o))&&void 0!==Z?Z:"",G=null!==(b=new URL(window.location.href).searchParams.get(d))&&void 0!==b?b:"",g=null!==(m=new URL(window.location.href).searchParams.get(s))&&void 0!==m?m:"",he.removeAuthorizationCode()),I&&g?(p="true",t(void 0,void 0,void 0,(function*(){yield h.setSessionStatus(p)})),S(I,G,g)):r.getAuthorizationURL(l).then((l=>t(void 0,void 0,void 0,(function*(){if(i.storage===e.Storage.BrowserMemory&&i.enablePKCE){const e=u.extractPKCEKeyFromStateParam(g);he.setPKCE(e,yield r.getPKCECode(g))}return location.href=l,yield he.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})}))))}var p})),signOut:()=>t(void 0,void 0,void 0,(function*(){return(yield r.isAuthenticated())&&!G?location.href=yield r.getSignOutURL():location.href=he.getSignOutURL(i.clientID,l),b.clearRefreshTokenTimeout(),yield h.removeOIDCProviderMetaData(),yield h.removeTemporaryData(),yield h.removeSessionData(),yield h.removeSessionStatus(),yield he.waitTillPageRedirect(),!0})),trySignInSilently:()=>t(void 0,void 0,void 0,(function*(){return yield I.trySignInSilently(Y,S,m)})),updateConfig:e=>t(void 0,void 0,void 0,(function*(){const t=yield h.getConfigData(),l=!(t&&t.endpoints&&t.endpoints.checkSessionIframe&&e&&e.endpoints&&e.endpoints.checkSessionIframe&&t.endpoints.checkSessionIframe===e.endpoints.checkSessionIframe),i=Object.assign(Object.assign({},t),e);yield r.updateConfig(i),i.enableOIDCSessionManagement&&l&&(m.reset(),W())}))}})),Tn=(l,i,n,c)=>t(void 0,void 0,void 0,(function*(){var a;let Z;const b=null!==(a=null==i?void 0:i.requestTimeout)&&void 0!==a?a:6e4;let h=!0,m=!1;const I=(t=>{switch(t){case e.Storage.LocalStorage:return new Kl;case e.Storage.SessionStorage:return new Jl;case e.Storage.BrowserMemory:return new Nl;default:return new Jl}})(i.storage),G=new fn,g=new p;yield g.initialize(i,I,G,l);const X=new Ie(g),y=yield Ge((()=>t(void 0,void 0,void 0,(function*(){const e={type:S};try{return yield C(e)}catch(e){return he.getSignOutURL(i.clientID,l)}}))),i.storage,(e=>Q(e))),V=c(g,X),W=new n,C=e=>{const t=new MessageChannel;return W.postMessage(e,[t.port2]),new Promise(((e,l)=>{const i=setTimeout((()=>{l(new r("SPA-WEB_WORKER_CLIENT-COM-TO01","Operation timed out.","No response was received from the web worker for "+b/1e3+" since dispatching the request"))}),b);return t.port1.onmessage=({data:n})=>{if(clearTimeout(i),t.port1.close(),t.port2.close(),null==n?void 0:n.success){const t=(null==n?void 0:n.data)?JSON.parse(null==n?void 0:n.data):null;(null==n?void 0:n.blob)&&(t.data=null==n?void 0:n.blob),e(t)}else l(n.error?JSON.parse(n.error):null)}}))},Q=e=>C({data:e,type:M}),O=()=>C({type:j}),_=()=>t(void 0,void 0,void 0,(function*(){const e=yield ne(),l=yield de();V.initializeSessionManger(l,e,(()=>t(void 0,void 0,void 0,(function*(){return(yield ce()).sessionState}))),(e=>t(void 0,void 0,void 0,(function*(){return(yield ee(e)).authorizationURL}))),y)})),$=()=>t(void 0,void 0,void 0,(function*(){var e;const t=yield de(),l={data:{prompt:"none",state:oe},type:A},i=yield C(l),n=u.extractPKCEKeyFromStateParam(null!==(e=new URL(i.authorizationURL).searchParams.get(s))&&void 0!==e?e:"");i.pkce&&t.enablePKCE&&he.setPKCE(n,i.pkce);const o=i.authorizationURL,d=new URL(o);d.searchParams.set("response_mode","query");return d.toString()})),ee=e=>t(void 0,void 0,void 0,(function*(){const l=yield de();return C({data:e,type:A}).then((e=>t(void 0,void 0,void 0,(function*(){var t;if(e.pkce&&l.enablePKCE){const l=u.extractPKCEKeyFromStateParam(null!==(t=new URL(e.authorizationURL).searchParams.get(s))&&void 0!==t?t:"");he.setPKCE(l,e.pkce)}return Promise.resolve(e)}))))})),te=(e,i,n)=>t(void 0,void 0,void 0,(function*(){const t=yield de(),o=u.extractPKCEKeyFromStateParam(n),d={data:{code:e,pkce:t.enablePKCE?he.getPKCE(o):void 0,sessionState:i,state:n},type:z};return t.enablePKCE&&he.removePKCE(o),C(d).then((e=>C({type:w}).then((i=>(he.setSignOutURL(i,t.clientID,l),t.enableOIDCSessionManagement&&_(),O(),Promise.resolve(e)))).catch((e=>Promise.reject(e))))).catch((e=>Promise.reject(e)))})),le=()=>t(void 0,void 0,void 0,(function*(){return yield y.receivePromptNoneResponse((e=>t(void 0,void 0,void 0,(function*(){return Q(e)}))))})),ie=()=>t(void 0,void 0,void 0,(function*(){if(yield ae())return yield O(),i.enableOIDCSessionManagement&&_(),ce()})),ne=()=>C({type:L}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),de=()=>C({type:q}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),ce=()=>C({type:f}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),ae=()=>C({type:x}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e)));return{disableHttpHandler:()=>C({type:F}).then((()=>(h=!1,Promise.resolve(!0)))).catch((e=>Promise.reject(e))),enableHttpHandler:()=>C({type:B}).then((()=>(h=!0,Promise.resolve(!0)))).catch((e=>Promise.reject(e))),getBasicUserInfo:ce,getCryptoHelper:()=>C({type:T}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getDecodedIDPIDToken:()=>C({type:"get-decoded-idp-id-token"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getDecodedIDToken:()=>C({type:U}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getIDToken:()=>C({type:D}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getOIDCServiceEndpoints:ne,httpRequest:e=>{(null==e?void 0:e.data)&&(null==e?void 0:e.data)instanceof FormData&&(e.data=Object.assign(Object.assign({},Object.fromEntries(null==e?void 0:e.data.entries())),{formData:!0}));return C({data:e,type:Y}).then((e=>Promise.resolve(e))).catch((e=>t(void 0,void 0,void 0,(function*(){return h&&("function"==typeof Z.requestErrorCallback&&(yield Z.requestErrorCallback(e)),"function"==typeof Z.requestFinishCallback&&Z.requestFinishCallback()),Promise.reject(e)}))))},httpRequestAll:e=>C({data:e,type:v}).then((e=>Promise.resolve(e))).catch((e=>t(void 0,void 0,void 0,(function*(){return h&&("function"==typeof Z.requestErrorCallback&&(yield Z.requestErrorCallback(e)),"function"==typeof Z.requestFinishCallback&&Z.requestFinishCallback()),Promise.reject(e)})))),initialize:()=>{Z||(Z={requestErrorCallback:()=>Promise.resolve(),requestFinishCallback:()=>null,requestStartCallback:()=>null,requestSuccessCallback:()=>null}),W.onmessage=({data:e})=>{switch(e.type){case k:(null==Z?void 0:Z.requestFinishCallback)&&(null==Z||Z.requestFinishCallback());break;case J:(null==Z?void 0:Z.requestStartCallback)&&(null==Z||Z.requestStartCallback());break;case H:(null==Z?void 0:Z.requestSuccessCallback)&&(null==Z||Z.requestSuccessCallback(e.data?JSON.parse(e.data):null))}};return C({data:i,type:R}).then((()=>Promise.resolve(!0))).catch((e=>Promise.reject(e)))},isAuthenticated:ae,refreshAccessToken:()=>C({type:P}),requestCustomGrant:e=>C({data:e,type:K}).then((t=>(e.preventSignOutURLUpdate&&(m=!0),Promise.resolve(t)))).catch((e=>Promise.reject(e))),revokeAccessToken:()=>C({type:N}).then((e=>(y.reset(),Promise.resolve(e)))).catch((e=>Promise.reject(e))),setHttpRequestErrorCallback:e=>{e&&"function"==typeof e&&(Z.requestErrorCallback=e)},setHttpRequestFinishCallback:e=>{e&&"function"==typeof e&&(Z.requestFinishCallback=e)},setHttpRequestStartCallback:e=>{e&&"function"==typeof e&&(Z.requestStartCallback=e)},setHttpRequestSuccessCallback:e=>{e&&"function"==typeof e&&(Z.requestSuccessCallback=e)},signIn:(l,n,c,a)=>t(void 0,void 0,void 0,(function*(){var Z,r,u;const b=yield V.handleSignIn(le,_,ie);if(b)return b;{let b,h,m;return(null==i?void 0:i.responseMode)===e.ResponseMode.formPost&&n?(b=n,h=null!=c?c:"",m=null!=a?a:""):(b=null!==(Z=new URL(window.location.href).searchParams.get(o))&&void 0!==Z?Z:"",h=null!==(r=new URL(window.location.href).searchParams.get(d))&&void 0!==r?r:"",m=null!==(u=new URL(window.location.href).searchParams.get(s))&&void 0!==u?u:"",he.removeAuthorizationCode()),b&&m?te(b,h,m):ee(l).then((e=>t(void 0,void 0,void 0,(function*(){return location.href=e.authorizationURL,yield he.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})})))).catch((e=>Promise.reject(e)))}})),signOut:()=>ae().then((e=>t(void 0,void 0,void 0,(function*(){if(e&&!m){return C({type:S}).then((e=>t(void 0,void 0,void 0,(function*(){return window.location.href=e,yield he.waitTillPageRedirect(),Promise.resolve(!0)})))).catch((e=>Promise.reject(e)))}return window.location.href=he.getSignOutURL(i.clientID,l),yield he.waitTillPageRedirect(),Promise.resolve(!0)})))).catch((e=>Promise.reject(e))),trySignInSilently:()=>t(void 0,void 0,void 0,(function*(){return yield V.trySignInSilently($,te,y)})),updateConfig:e=>t(void 0,void 0,void 0,(function*(){const t=yield de(),l=!(t&&t.endpoints&&t.endpoints.checkSessionIframe&&e&&e.endpoints&&e.endpoints.checkSessionIframe&&t.endpoints.checkSessionIframe===e.endpoints.checkSessionIframe),i=Object.assign(Object.assign({},t),e),n={data:i,type:E};yield C(n),i.enableOIDCSessionManagement&&l&&(y.reset(),_())}))}})),Bn={checkSessionInterval:3,clientHost:origin,enableOIDCSessionManagement:!1,sessionRefreshInterval:300,storage:e.Storage.SessionStorage};class Fn{constructor(e){this._authHelper=me,this._worker=C,this._initialized=!1,this._startedInitialize=!1,this._onSignInCallback=()=>null,this._onSignOutCallback=()=>null,this._onSignOutFailedCallback=()=>null,this._onEndUserSession=()=>null,this._onInitialize=()=>null,this._onCustomGrant=new Map,this._instanceID=e}instantiateAuthHelper(e){this._authHelper=e||me}instantiateWorker(e){this._worker=e||C}_isInitialized(){return t(this,void 0,void 0,(function*(){if(!this._startedInitialize)return!1;let e=0;for(;!this._initialized;)1e4===e&&console.warn("It is taking longer than usual for the object to be initialized"),yield new Promise((e=>setTimeout(e,1))),e++;return!0}))}_validateMethod(e=!0){return t(this,void 0,void 0,(function*(){return(yield this._isInitialized())?!(e&&!(yield this.isAuthenticated()))||Promise.reject(new r("SPA-AUTH_CLIENT-VM-IV02","The user is not authenticated.","The user must be authenticated first.")):Promise.reject(new r("SPA-AUTH_CLIENT-VM-NF01","The SDK is not initialized.","The SDK must be initialized first."))}))}
/**
         * This method returns the instance of the singleton class.
         * If an ID is provided, it will return the instance with the given ID.
         * If no ID is provided, it will return the default instance value 0.
         *
         * @return {AsgardeoSPAClient} - Returns the instance of the singleton class.
         *
         * @example
         * ```
         * const auth = AsgardeoSPAClient.getInstance();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getinstance
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */static getInstance(e){var t,l;return e&&(null===(t=this._instances)||void 0===t?void 0:t.get(e))?this._instances.get(e):!e&&(null===(l=this._instances)||void 0===l?void 0:l.get(0))?this._instances.get(0):e?(this._instances.set(e,new Fn(e)),this._instances.get(e)):(this._instances.set(0,new Fn(0)),this._instances.get(0))}
/**
         * This method initializes the `AsgardeoSPAClient` instance.
         *
         * @param {ConfigInterface} config The config object to initialize with.
         *
         * @return {Promise<boolean>} - Resolves to `true` if initialization is successful.
         *
         * @example
         * ```
         * auth.initialize({
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://api.asgardeo.io"
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#initialize
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */initialize(l,i,n){var o;return t(this,void 0,void 0,(function*(){if(this._storage=null!==(o=l.storage)&&void 0!==o?o:e.Storage.SessionStorage,this._initialized=!1,this._startedInitialize=!0,i&&this.instantiateAuthHelper(i),n&&this.instantiateWorker(n),this._storage!==e.Storage.WebWorker){if(!this._client){const e=l,t=Object.assign({},Bn);this._client=yield Un(this._instanceID,Object.assign(Object.assign({},t),e),((e,t)=>new this._authHelper(e,t)))}return this._initialized=!0,this._onInitialize&&this._onInitialize(!0),window.addEventListener("message",(e=>{var t;(null===(t=null==e?void 0:e.data)||void 0===t?void 0:t.type)===Q&&this.signOut()})),Promise.resolve(!0)}if(!this._client){const e=l;return this._client=yield Tn(this._instanceID,Object.assign(Object.assign({},Bn),e),this._worker,((e,t)=>new this._authHelper(e,t))),this._client.initialize().then((()=>(this._onInitialize&&this._onInitialize(!0),this._initialized=!0,Promise.resolve(!0)))).catch((e=>Promise.reject(e)))}return Promise.resolve(!0)}))}
/**
         * This method returns a Promise that resolves with the basic user information obtained from the ID token.
         *
         * @return {Promise<BasicUserInfo>} - A promise that resolves with the user information.
         *
         * @example
         * ```
         * auth.getBasicUserInfo().then((response) => {
         *    // console.log(response);
         * }).catch((error) => {
         *    // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getuserinfo
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getBasicUserInfo(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getBasicUserInfo()}))}
/**
         * This method initiates the authentication flow. This should be called twice.
         *  1. To initiate the authentication flow.
         *  2. To obtain the access token after getting the authorization code.
         *
         * To satisfy the second condition, one of the two strategies mentioned below can be used:
         *  1. Redirect the user back to the same login page that initiated the authentication flow.
         *  2. Call the `signIn()` method in the page the user is redirected to after authentication.
         *
         * **To fire a callback function after signing in, use the `on()` method.**
         * **To learn more about the `on()` method:**
         * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
         *
         * @param {SignInConfig} config - The sign-in config.
         * The `SignInConfig` object has these two attributes in addition to any custom key-value pairs.
         *  1. fidp - Specifies the FIDP parameter that is used to take the user directly to an IdP login page.
         *  2. forceInit: Specifies if the OIDC Provider Meta Data should be loaded again from the `well-known`
         * endpoint.
         *  3. Any other parameters that should be appended to the authorization request.
         * @param {string} authorizationCode - The authorization code. (Optional)
         * @param {string} sessionState - The session state. (Optional)
         * @param {string} state - The state. (Optional)
         *
         * @return {Promise<BasicUserInfo>} - A promise that resolves with the user information.
         *
         * @example
         * ```
         * auth.signIn();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signin
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */signIn(e,l,i,n){var o;return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),he.canContinueSignIn(Boolean(null==e?void 0:e.callOnlyOnRedirect),l))return null==e||delete e.callOnlyOnRedirect,null===(o=this._client)||void 0===o?void 0:o.signIn(e,l,i,n).then((e=>(this._onSignInCallback&&(e.allowedScopes||e.displayName||e.email||e.username)&&this._onSignInCallback(e),e)))}))}trySignInSilently(){var e;return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!he.wasSignInCalled())return null===(e=this._client)||void 0===e?void 0:e.trySignInSilently().then((e=>{if(this._onSignInCallback&&e){const t=e;(t.allowedScopes||t.displayName||t.email||t.username)&&this._onSignInCallback(t)}return e}))}))}
/**
         * This method initiates the sign-out flow.
         *
         * **To fire a callback function after signing out, use the `on()` method.**
         * **To learn more about the `on()` method:**
         * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
         *
         * @return {Promise<boolean>} - Returns a promise that resolves with `true` if sign out is successful.
         *
         * @example
         * ```
         * auth.signOut();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signout
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */signOut(){var e,l;return t(this,void 0,void 0,(function*(){yield this._validateMethod();return null!==(l=yield null===(e=this._client)||void 0===e?void 0:e.signOut())&&void 0!==l&&l}))}
/**
         * This method sends an API request to a protected endpoint.
         * The access token is automatically attached to the header of the request.
         * This is the only way by which protected endpoints can be accessed
         * when the web worker is used to store session information.
         *
         * @param {HttpRequestConfig} config -  The config object containing attributes necessary to send a request.
         *
         * @return {Promise<HttpResponse>} - Returns a Promise that resolves with the response to the request.
         *
         * @example
         * ```
         *  const requestConfig = {
         *      headers: {
         *          "Accept": "application/json",
         *          "Access-Control-Allow-Origin": "https://api.asgardeo.io/myaccount",
         *          "Content-Type": "application/scim+json"
         *      },
         *      method: "GET",
         *      url: "https://api.asgardeo.io/scim2/me"
         *  };
         *
         *  return auth.httpRequest(requestConfig)
         *     .then((response) => {
         *           // console.log(response);
         *      })
         *      .catch((error) => {
         *           // console.error(error);
         *      });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequest
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */httpRequest(e){var l;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(e.attachToken),null===(l=this._client)||void 0===l?void 0:l.httpRequest(e)}))}
/**
         * This method sends multiple API requests to a protected endpoint.
         * The access token is automatically attached to the header of the request.
         * This is the only way by which multiple requests can be sent to protected endpoints
         * when the web worker is used to store session information.
         *
         * @param {HttpRequestConfig[]} config -  The config object containing attributes necessary to send a request.
         *
         * @return {Promise<HttpResponse[]>} - Returns a Promise that resolves with the responses to the requests.
         *
         * @example
         * ```
         *  const requestConfig = {
         *      headers: {
         *          "Accept": "application/json",
         *          "Content-Type": "application/scim+json"
         *      },
         *      method: "GET",
         *      url: "https://api.asgardeo.io/scim2/me"
         *  };
         *
         *  const requestConfig2 = {
         *      headers: {
         *          "Accept": "application/json",
         *          "Content-Type": "application/scim+json"
         *      },
         *      method: "GET",
         *      url: "https://api.asgardeo.io/scim2/me"
         *  };
         *
         *  return auth.httpRequest([requestConfig, requestConfig2])
         *     .then((responses) => {
         *           response.forEach((response)=>{
         *              // console.log(response);
         *           });
         *      })
         *      .catch((error) => {
         *           // console.error(error);
         *      });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequestall
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */httpRequestAll(e){var l;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.httpRequestAll(e)}))}
/**
         * This method allows you to send a request with a custom grant.
         *
         * @param {CustomGrantRequestParams} config - The request parameters.
         *
         * @return {Promise<HttpResponse<any> | SignInResponse>} - A Promise that resolves with
         * the value returned by the custom grant request.
         *
         * @example
         * ```
         * auth.customGrant({
         *   attachToken: false,
         *   data: {
         *       client_id: "{{clientId}}",
         *       grant_type: "account_switch",
         *       scope: "{{scope}}",
         *       token: "{{token}}",
         *   },
         *   id: "account-switch",
         *   returnResponse: true,
         *   returnsSession: true,
         *   signInRequired: true
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#customgrant
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */requestCustomGrant(e){var l,i;return t(this,void 0,void 0,(function*(){if(e.signInRequired,yield this._validateMethod(),!e.id)return Promise.reject(new r("SPA-AUTH_CLIENT-RCG-NF01","The custom grant request id not found.","The id attribute of the custom grant config object passed as an argument should have a value."));const t=yield null===(l=this._client)||void 0===l?void 0:l.requestCustomGrant(e),n=this._onCustomGrant.get(e.id);return n&&n(null===(i=this._onCustomGrant)||void 0===i?void 0:i.get(e.id)),t}))}
/**
         * This method ends a user session. The access token is revoked and the session information is destroyed.
         *
         * **To fire a callback function after ending user session, use the `on()` method.**
         * **To learn more about the `on()` method:**
         * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
         *
         * @return {Promise<boolean>} - A promise that resolves with `true` if the process is successful.
         *
         * @example
         * ```
         * auth.endUserSession();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#endusersession
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */revokeAccessToken(){var e;return t(this,void 0,void 0,(function*(){yield this._validateMethod();const t=yield null===(e=this._client)||void 0===e?void 0:e.revokeAccessToken();return this._onEndUserSession&&(yield this._onEndUserSession(t)),t}))}
/**
         * This method returns a Promise that resolves with an object containing the service endpoints.
         *
         * @return {Promise<ServiceResourcesType} - A Promise that resolves with an object containing the service endpoints.
         *
         * @example
         * ```
         * auth.getServiceEndpoints().then((endpoints) => {
         *      // console.log(endpoints);
         *  }).error((error) => {
         *      // console.error(error);
         *  });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getserviceendpoints
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getOIDCServiceEndpoints(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.getOIDCServiceEndpoints()}))}
/**
         * This methods returns the Axios http client.
         *
         * @return {HttpClientInstance} - The Axios HTTP client.
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getHttpClient(){if(this._client){if(this._storage!==e.Storage.WebWorker){return this._client.getHttpClient()}throw new r("SPA-AUTH_CLIENT-GHC-IV01","Http client cannot be returned.","The http client cannot be returned when the storage type is set to webWorker.")}throw new r("SPA-AUTH_CLIENT-GHC-NF02","The SDK is not initialized.","The SDK has not been initialized yet. Initialize the SDK using the initialize method before calling this method.")}
/**
         * This method decodes the payload of the id token and returns it.
         *
         * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with
         * the decoded payload of the id token.
         *
         * @example
         * ```
         * auth.getDecodedIDToken().then((response)=>{
         *     // console.log(response);
         * }).catch((error)=>{
         *     // console.error(error);
         * });
         * ```
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdecodedidtoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getDecodedIDToken(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getDecodedIDToken()}))}
/**
         * This method returns the CryptoHelper instance.
         *
         * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with
         * the CryptoHelper instance.
         *
         * @example
         * ```
         * auth.getCryptoHelper().then((response)=>{
         *     // console.log(response);
         * }).catch((error)=>{
         *     // console.error(error);
         * });
         * ```
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getCryptoHelper
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getCryptoHelper(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getCryptoHelper()}))}
/**
         * This method return the ID token.
         *
         * @return {Promise<string>} - A Promise that resolves with the ID token.
         *
         * @example
         * ```
         * const idToken = await auth.getIDToken();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getIDToken
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */getIDToken(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.getIDToken()}))}
/**
         * This method return a Promise that resolves with the access token.
         *
         * **This method will not return the access token if the storage type is set to `webWorker`.**
         *
         * @return {Promise<string>} - A Promise that resolves with the access token.
         *
         * @example
         * ```
         *   auth.getAccessToken().then((token) => {
         *       // console.log(token);
         *   }).catch((error) => {
         *       // console.error(error);
         *   });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getAccessToken(){return t(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(e.Storage.WebWorker,e.Storage.BrowserMemory)].includes(this._storage))return Promise.reject(new r("SPA-AUTH_CLIENT-GAT-IV01","The access token cannot be returned.","The access token cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getAccessToken()}))}
/**
         * This method return a Promise that resolves with the idp access token.
         *
         * **This method will not return the access token if the storage type is set to `webWorker`.**
         *
         * @return {Promise<string>} - A Promise that resolves with the idp access token.
         *
         * @example
         * ```
         *   auth.getIDPAccessToken().then((token) => {
         *       // console.log(token);
         *   }).catch((error) => {
         *       // console.error(error);
         *   });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getIDPAccessToken(){return t(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(e.Storage.WebWorker,e.Storage.BrowserMemory)].includes(this._storage))return Promise.reject(new r("SPA-AUTH_CLIENT-GIAT-IV01","The access token cannot be returned.","The access token cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getAccessToken()}))}
/**
         * This method return a Promise that resolves with the data layer object.
         *
         * **This method will not return the data layer object, if the storage type is set to `webWorker`.**
         *
         * @return {Promise<string>} - A Promise that resolves with the data layer object.
         *
         * @example
         * ```
         *   auth.getDataLayer().then((dataLayer) => {
         *       // console.log(dataLayer);
         *   }).catch((error) => {
         *       // console.error(error);
         *   });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdatalayer
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */getDataLayer(){return t(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(e.Storage.WebWorker,e.Storage.BrowserMemory)].includes(this._storage))return Promise.reject(new r("SPA-AUTH_CLIENT-GDL-IV01","The data layer cannot be returned.","The data layer cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getDataLayer()}))}
/**
         * This method refreshes the access token.
         *
         * @return {TokenResponseInterface} - A Promise that resolves with an object containing
         * information about the refreshed access token.
         *
         * @example
         * ```
         * auth.refreshToken().then((response)=>{
         *      // console.log(response);
         * }).catch((error)=>{
         *      // console.error(error);
         * });
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#refreshtoken
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */refreshAccessToken(){var e;return t(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(e=this._client)||void 0===e?void 0:e.refreshAccessToken()}))}
/**
         * This method specifies if the user is authenticated or not.
         *
         * @return {Promise<boolean>} - A Promise that resolves with `true` if the user is authenticated.
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */isAuthenticated(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.isAuthenticated()}))}
/**
         * This method specifies if there is an active session in the browser or not.
         *
         * @return {Promise<boolean>} - A Promise that resolves with `true` if there is a session.
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */isSessionActive(){return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),this._storage&&[(e.Storage.WebWorker,e.Storage.BrowserMemory)].includes(this._storage))return Promise.reject(new r("SPA-AUTH_CLIENT-ISA-IV01","The active session cannot be returned.","The active session cannot be returned when the storage type is set to webWorker or browserMemory."));const t=this._client;return null==t?void 0:t.isSessionActive()}))}on(l,i,n){var o,d,c,a;return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!i||"function"!=typeof i)throw new r("SPA-AUTH_CLIENT-ON-IV02","Invalid callback function.","The provided callback function is invalid.");switch(l){case e.Hooks.SignIn:this._onSignInCallback=i;break;case e.Hooks.SignOut:this._onSignOutCallback=i,(yield he.isSignOutSuccessful())&&this._onSignOutCallback();break;case e.Hooks.RevokeAccessToken:this._onEndUserSession=i;break;case e.Hooks.Initialize:this._onInitialize=i;break;case e.Hooks.HttpRequestError:null===(o=this._client)||void 0===o||o.setHttpRequestErrorCallback(i);break;case e.Hooks.HttpRequestFinish:null===(d=this._client)||void 0===d||d.setHttpRequestFinishCallback(i);break;case e.Hooks.HttpRequestStart:null===(c=this._client)||void 0===c||c.setHttpRequestStartCallback(i);break;case e.Hooks.HttpRequestSuccess:null===(a=this._client)||void 0===a||a.setHttpRequestSuccessCallback(i);break;case e.Hooks.CustomGrant:n&&this._onCustomGrant.set(n,i);break;case e.Hooks.SignOutFailed:{this._onSignOutFailedCallback=i;const e=he.didSignOutFail();e&&this._onSignOutFailedCallback(e);break}default:throw new r("SPA-AUTH_CLIENT-ON-IV01","Invalid hook.","The provided hook is invalid.")}}))}
/**
         * This method enables callback functions attached to the http client.
         *
         * @return {Promise<boolean>} - A promise that resolves with True.
         *
         * @example
         * ```
         * auth.enableHttpHandler();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#enableHttpHandler
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */enableHttpHandler(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.enableHttpHandler()}))}
/**
         * This method disables callback functions attached to the http client.
         *
         * @return {Promise<boolean>} - A promise that resolves with True.
         *
         * @example
         * ```
         * auth.disableHttpHandler();
         * ```
         *
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#disableHttpHandler
         *
         * @memberof AsgardeoSPAClient
         *
         * @preserve
         */disableHttpHandler(){var e;return t(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(e=this._client)||void 0===e?void 0:e.disableHttpHandler()}))}
/**
         * This method updates the configuration that was passed into the constructor when instantiating this class.
         *
         * @param {Partial<AuthClientConfig<T>>} config - A config object to update the SDK configurations with.
         *
         * @example
         * ```
         * const config = {
         *     signInRedirectURL: "http://localhost:3000/sign-in",
         *     clientID: "client ID",
         *     baseUrl: "https://api.asgardeo.io"
         * }
         * const auth.updateConfig(config);
         * ```
         * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master/lib#updateConfig
         *
         * @memberof AsgardeoAuthClient
         *
         * @preserve
         */updateConfig(l){return t(this,void 0,void 0,(function*(){if(yield this._isInitialized(),this._storage===e.Storage.WebWorker){const e=this._client;yield e.updateConfig(l)}else{const e=this._client;yield e.updateConfig(l)}}))}}Fn._instances=new Map;class An extends Worker{constructor(){super(...arguments),this.onmessage=()=>null}}e.ASGARDEO_SESSION_ACTIVE="asgardeo-session-active",e.AUTHORIZATION_CODE=o,e.AsgardeoAuthClient=p,e.AsgardeoAuthException=r,e.AsgardeoSPAClient=Fn,e.AuthenticationHelper=me,e.AuthenticationUtils=u,e.CLIENT_ID_TAG="{{clientID}}",e.CLIENT_SECRET_TAG="{{clientSecret}}",e.CryptoHelper=h,e.DataLayer=I,e.MainThreadClient=Un,e.OIDC_SCOPE="openid",e.PKCE_CODE_VERIFIER="pkce_code_verifier",e.PKCE_SEPARATOR="#",e.REFRESH_TOKEN_TIMER=i,e.SCOPE_TAG="{{scope}}",e.SESSION_STATE=d,e.SIGN_OUT_SUCCESS_PARAM=a,e.SIGN_OUT_URL=c,e.SPAHelper=Ie,e.SPAUtils=he,e.STATE=s,e.SUPPORTED_SIGNATURE_ALGORITHMS=n,e.TOKEN_TAG="{{token}}",e.USERNAME_TAG="{{username}}",e.WebWorkerClass=An,e.WebWorkerClient=Tn,e.workerReceiver=e=>{const l=self;let i;l.onmessage=({data:l,ports:a})=>t(void 0,void 0,void 0,(function*(){var Z,u,b,h,m,I;const G=a[0];if(l.type===R||i)switch(l.type){case R:try{const a=Object.assign({},l.data);i=yield((e,l)=>t(void 0,void 0,void 0,(function*(){const i=new Nl,n=new fn,o=new p;yield o.initialize(e,i,n);const c=new Ie(o),a=l(o,c),Z=o.getDataLayer(),r=vl.getInstance();return(null==r?void 0:r.init)&&(yield r.init(!0,(e=>t(void 0,void 0,void 0,(function*(){yield a.attachTokenToRequestConfig(e)}))))),{disableHttpHandler:()=>{a.disableHttpHandler(r)},enableHttpHandler:()=>{a.enableHttpHandler(r)},getAccessToken:()=>a.getAccessToken(),getAuthorizationURL:e=>t(void 0,void 0,void 0,(function*(){return o.getAuthorizationURL(e).then((e=>t(void 0,void 0,void 0,(function*(){var t;const l=null!==(t=new URL(e).searchParams.get(s))&&void 0!==t?t:"",i=yield o.getPKCECode(l);return{authorizationURL:e,pkce:i}})))).catch((e=>Promise.reject(e)))})),getBasicUserInfo:()=>t(void 0,void 0,void 0,(function*(){return a.getBasicUserInfo()})),getConfigData:()=>t(void 0,void 0,void 0,(function*(){return Z.getConfigData()})),getCryptoHelper:()=>t(void 0,void 0,void 0,(function*(){return a.getCryptoHelper()})),getDecodedIDPIDToken:()=>t(void 0,void 0,void 0,(function*(){return a.getDecodedIDPIDToken()})),getDecodedIDToken:()=>t(void 0,void 0,void 0,(function*(){return a.getDecodedIDToken()})),getIDToken:()=>t(void 0,void 0,void 0,(function*(){return a.getIDToken()})),getOIDCServiceEndpoints:()=>t(void 0,void 0,void 0,(function*(){return a.getOIDCServiceEndpoints()})),getSignOutURL:()=>t(void 0,void 0,void 0,(function*(){return yield o.getSignOutURL()})),httpRequest:e=>t(void 0,void 0,void 0,(function*(){return yield a.httpRequest(r,e)})),httpRequestAll:e=>t(void 0,void 0,void 0,(function*(){return yield a.httpRequestAll(e,r)})),isAuthenticated:()=>a.isAuthenticated(),refreshAccessToken:()=>t(void 0,void 0,void 0,(function*(){try{return yield a.refreshAccessToken()}catch(e){return Promise.reject(e)}})),requestAccessToken:(e,l,i,n)=>t(void 0,void 0,void 0,(function*(){return yield a.requestAccessToken(e,l,void 0,i,n)})),requestCustomGrant:e=>t(void 0,void 0,void 0,(function*(){return yield a.requestCustomGrant(e)})),revokeAccessToken:()=>t(void 0,void 0,void 0,(function*(){const e=yield c.getRefreshTimeoutTimer();return o.revokeAccessToken().then((()=>(c.clearRefreshTokenTimeout(e),Promise.resolve(!0)))).catch((e=>Promise.reject(e)))})),setHttpRequestFinishCallback:e=>{(null==r?void 0:r.setHttpRequestFinishCallback)&&r.setHttpRequestFinishCallback(e)},setHttpRequestStartCallback:e=>{(null==r?void 0:r.setHttpRequestStartCallback)&&r.setHttpRequestStartCallback(e)},setHttpRequestSuccessCallback:e=>{(null==r?void 0:r.setHttpRequestSuccessCallback)&&r.setHttpRequestSuccessCallback(e)},setSessionState:e=>t(void 0,void 0,void 0,(function*(){yield Z.setSessionDataParameter(d,e)})),signOut:()=>t(void 0,void 0,void 0,(function*(){return c.clearRefreshTokenTimeout(),yield o.getSignOutURL()})),startAutoRefreshToken:()=>t(void 0,void 0,void 0,(function*(){c.clearRefreshTokenTimeout(),c.refreshAccessTokenAutomatically(a)})),updateConfig:e=>t(void 0,void 0,void 0,(function*(){yield o.updateConfig(e)}))}})))(a,e),i.setHttpRequestFinishCallback(c),i.setHttpRequestStartCallback(n),i.setHttpRequestSuccessCallback(o),G.postMessage(be.generateSuccessMessage())}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case A:i.getAuthorizationURL(null==l?void 0:l.data).then((e=>{G.postMessage(be.generateSuccessMessage(e))})).catch((e=>{G.postMessage(be.generateFailureMessage(e))}));break;case z:i.requestAccessToken(null===(Z=null==l?void 0:l.data)||void 0===Z?void 0:Z.code,null===(u=null==l?void 0:l.data)||void 0===u?void 0:u.sessionState,null===(b=null==l?void 0:l.data)||void 0===b?void 0:b.pkce,null===(h=null==l?void 0:l.data)||void 0===h?void 0:h.state).then((e=>{G.postMessage(be.generateSuccessMessage(e))})).catch((e=>{G.postMessage(be.generateFailureMessage(e))}));break;case Y:{const e=l.data,t=null==e?void 0:e.data;if(!0===(null===(I=null===(m=l.data)||void 0===m?void 0:m.data)||void 0===I?void 0:I.formData)){const l=new FormData;for(const e in t)"formData"!==e&&l.append(e,t[e]);e.data=l}i.httpRequest(e).then((e=>{G.postMessage(be.generateSuccessMessage(e))})).catch((e=>{G.postMessage(be.generateFailureMessage(e))}));break}case v:i.httpRequestAll(l.data).then((e=>{G.postMessage(be.generateSuccessMessage(e))})).catch((e=>{G.postMessage(be.generateFailureMessage(e))}));break;case S:try{G.postMessage(be.generateSuccessMessage(yield i.signOut()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case K:i.requestCustomGrant(l.data).then((e=>{G.postMessage(be.generateSuccessMessage(e))})).catch((e=>{G.postMessage(be.generateFailureMessage(e))}));break;case N:i.revokeAccessToken().then((e=>{G.postMessage(be.generateSuccessMessage(e))})).catch((e=>{G.postMessage(be.generateFailureMessage(e))}));break;case L:try{G.postMessage(be.generateSuccessMessage(yield i.getOIDCServiceEndpoints()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case f:try{G.postMessage(be.generateSuccessMessage(yield i.getBasicUserInfo()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case U:try{G.postMessage(be.generateSuccessMessage(yield i.getDecodedIDToken()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case T:try{G.postMessage(be.generateSuccessMessage(yield i.getCryptoHelper()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case D:try{G.postMessage(be.generateSuccessMessage(yield i.getIDToken()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case B:i.enableHttpHandler(),G.postMessage(be.generateSuccessMessage());break;case F:i.disableHttpHandler(),G.postMessage(be.generateSuccessMessage());break;case x:try{G.postMessage(be.generateSuccessMessage(yield i.isAuthenticated()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case w:try{G.postMessage(be.generateSuccessMessage(yield i.getSignOutURL()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case P:try{G.postMessage(be.generateSuccessMessage(yield i.refreshAccessToken()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case j:try{G.postMessage(be.generateSuccessMessage(i.startAutoRefreshToken()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case M:try{G.postMessage(be.generateSuccessMessage(yield i.setSessionState(null==l?void 0:l.data)))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case E:try{G.postMessage(be.generateSuccessMessage(yield i.updateConfig(null==l?void 0:l.data)))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;case q:try{G.postMessage(be.generateSuccessMessage(yield i.getConfigData()))}catch(e){G.postMessage(be.generateFailureMessage(e))}break;default:null==G||G.postMessage(be.generateFailureMessage(new r("SPA-CLIENT_WORKER-ONMSG-IV02","The message type is invalid.",`The message type provided, ${l.type}, is invalid.`)))}else G.postMessage(be.generateFailureMessage(new r("SPA-CLIENT_WORKER-ONMSG-NF01","The web worker has not been initialized yet.","The initialize method needs to be called before the specified operation can be carried out.")))}));const n=()=>{l.postMessage({type:J})},o=e=>{l.postMessage({data:JSON.stringify(null!=e?e:""),type:H})},c=()=>{l.postMessage({type:k})}},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=asgardeo-spa.production.js.map

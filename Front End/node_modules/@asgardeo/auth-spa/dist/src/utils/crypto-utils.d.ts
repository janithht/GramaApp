/**
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/// <reference types="node" />
import { Buffer } from "buffer";
import { CryptoUtils, JWKInterface } from "@asgardeo/auth-js";
export declare class SPACryptoUtils implements CryptoUtils<Buffer | string> {
    /**
     * Get URL encoded string.
     *
     * @returns {string} base 64 url encoded value.
     */
    base64URLEncode(value: Buffer | string): string;
    base64URLDecode(value: string): string;
    hashSha256(data: string): string | Buffer;
    generateRandomBytes(length: number): string | Buffer;
    verifyJwt(idToken: string, jwk: Partial<JWKInterface>, algorithms: string[], clientID: string, issuer: string, subject: string, clockTolerance?: number, validateJwtIssuer?: boolean): Promise<boolean>;
}
//# sourceMappingURL=crypto-utils.d.ts.map